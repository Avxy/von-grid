{"version":3,"sources":["Scene.js","SelectionManager.js","Tile.js"],"names":["vg","Scene","sceneConfig","controlConfig","sceneSettings","element","document","body","alpha","antialias","clearColor","sortObjects","fog","light","THREE","DirectionalLight","lightPosition","cameraType","cameraPosition","orthoZoom","controlSettings","minDistance","maxDistance","zoomSpeed","noZoom","Tools","merge","this","renderer","WebGLRenderer","setClearColor","width","window","innerWidth","height","innerHeight","container","add","AmbientLight","position","set","normalize","camera","OrthographicCamera","PerspectiveCamera","contolled","controls","OrbitControls","domElement","overwrite","copy","addEventListener","type","left","right","top","bottom","aspect","updateProjectionMatrix","setSize","bind","attachTo","prototype","constructor","style","setPixelRatio","devicePixelRatio","appendChild","mesh","remove","render","update","updateOrthoZoom","focusOn","obj","lookAt","SelectionManager","mouse","onSelect","Signal","onDeselect","selected","toggleSelection","signal","onMouse","select","fireSignal","clearSelection","dispatch","deselect","MouseCaster","DOWN","CLICK","Tile","config","settings","cell","geometry","material","Error","tile","dispose","uniqueID","generateID","MeshPhongMaterial","color","randomizeRGB","objectType","TILE","entity","userData","highlight","Mesh","structure","rotation","x","DEG_TO_RAD","scale","emissive","_emissive","getHex","setHex","toggle","parent"],"mappings":"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","file":"von-grid-extras.min.js","sourcesContent":["/*\n\tSets up and manages a THREEjs container, camera, and light, making it easy to get going.\n\tAlso provides camera control.\n\n\tAssumes full screen.\n */\n// 'utils/Tools'\nvg.Scene = function(sceneConfig, controlConfig) {\n\tvar sceneSettings = {\n\t\telement: document.body,\n\t\talpha: true,\n\t\tantialias: true,\n\t\tclearColor: '#fff',\n\t\tsortObjects: false,\n\t\tfog: null,\n\t\tlight: new THREE.DirectionalLight(0xffffff),\n\t\tlightPosition: null,\n\t\tcameraType: 'PerspectiveCamera',\n\t\tcameraPosition: null, // {x, y, z}\n\t\torthoZoom: 4\n\t};\n\n\tvar controlSettings = {\n\t\tminDistance: 100,\n\t\tmaxDistance: 1000,\n\t\tzoomSpeed: 2,\n\t\tnoZoom: false\n\t};\n\n\tsceneSettings = vg.Tools.merge(sceneSettings, sceneConfig);\n\tif (typeof controlConfig !== 'boolean') {\n\t\tcontrolSettings = vg.Tools.merge(controlSettings, controlConfig);\n\t}\n\n\tthis.renderer = new THREE.WebGLRenderer({\n\t\talpha: sceneSettings.alpha,\n\t\tantialias: sceneSettings.antialias\n\t});\n\tthis.renderer.setClearColor(sceneSettings.clearColor, 0);\n\tthis.renderer.sortObjects = sceneSettings.sortObjects;\n\n\tthis.width = window.innerWidth;\n\tthis.height = window.innerHeight;\n\n\tthis.orthoZoom = sceneSettings.orthoZoom;\n\n\tthis.container = new THREE.Scene();\n\tthis.container.fog = sceneSettings.fog;\n\n\tthis.container.add(new THREE.AmbientLight(0xdddddd));\n\n\tif (!sceneSettings.lightPosition) {\n\t\tsceneSettings.light.position.set(-1, 1, -1).normalize();\n\t}\n\tthis.container.add(sceneSettings.light);\n\n\tif (sceneSettings.cameraType === 'OrthographicCamera') {\n\t\tvar width = window.innerWidth / this.orthoZoom;\n\t\tvar height = window.innerHeight / this.orthoZoom;\n\t\tthis.camera = new THREE.OrthographicCamera(width / -2, width / 2, height / 2, height / -2, 1, 5000);\n\t}\n\telse {\n\t\tthis.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 5000);\n\t}\n\n\tthis.contolled = !!controlConfig;\n\tif (this.contolled) {\n\t\tthis.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement);\n\t\tvg.Tools.overwrite(this.controls, controlSettings);\n\t}\n\n\tif (sceneSettings.cameraPosition) {\n\t\tthis.camera.position.copy(sceneSettings.cameraPosition);\n\t}\n\n\twindow.addEventListener('resize', function onWindowResize() {\n\t\tthis.width = window.innerWidth;\n\t\tthis.height = window.innerHeight;\n\t\tif (this.camera.type === 'OrthographicCamera') {\n\t\t\tvar width = this.width / this.orthoZoom;\n\t\t\tvar height = this.height / this.orthoZoom;\n\t\t\tthis.camera.left = width / -2;\n\t\t\tthis.camera.right = width / 2;\n\t\t\tthis.camera.top = height / 2;\n\t\t\tthis.camera.bottom = height / -2;\n\t\t}\n\t\telse {\n\t\t\tthis.camera.aspect = this.width / this.height;\n\t\t}\n\t\tthis.camera.updateProjectionMatrix();\n\t\tthis.renderer.setSize(this.width, this.height);\n\t}.bind(this), false);\n\n\tthis.attachTo(sceneSettings.element);\n};\n\nvg.Scene.prototype = {\n\tconstructor: vg.Scene,\n\n\tattachTo: function(element) {\n\t\telement.style.width = this.width + 'px';\n\t\telement.style.height = this.height + 'px';\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio);\n\t\tthis.renderer.setSize(this.width, this.height);\n\t\telement.appendChild(this.renderer.domElement);\n\t},\n\n\tadd: function(mesh) {\n\t\tthis.container.add(mesh);\n\t},\n\n\tremove: function(mesh) {\n\t\tthis.container.remove(mesh);\n\t},\n\n\trender: function() {\n\t\tif (this.contolled) this.controls.update();\n\t\tthis.renderer.render(this.container, this.camera);\n\t},\n\n\tupdateOrthoZoom: function() {\n\t\tif (this.orthoZoom <= 0) {\n\t\t\tthis.orthoZoom = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar width = this.width / this.orthoZoom;\n\t\tvar height = this.height / this.orthoZoom;\n\t\tthis.camera.left = width / -2;\n\t\tthis.camera.right = width / 2;\n\t\tthis.camera.top = height / 2;\n\t\tthis.camera.bottom = height / -2;\n\t\tthis.camera.updateProjectionMatrix();\n\t},\n\n\tfocusOn: function(obj) {\n\t\tthis.camera.lookAt(obj.position);\n\t}\n};\n","vg.SelectionManager = function(mouse) {\n\tthis.mouse = mouse;\n\n\tthis.onSelect = new vg.Signal();\n\tthis.onDeselect = new vg.Signal();\n\n\tthis.selected = null;\n\t// deselect if player clicked on the same thing twice\n\tthis.toggleSelection = false;\n\n\t// allow multiple entities to be selected at once\n\t// this.multiselect = false; // todo\n\t// this.allSelected = new LinkedList();\n\n\tthis.mouse.signal.add(this.onMouse, this);\n};\n\nvg.SelectionManager.prototype = {\n\tselect: function(obj, fireSignal) {\n\t\tif (!obj) return;\n\t\tfireSignal = fireSignal || true;\n\n\t\tif (this.selected !== obj) {\n\t\t\t// deselect previous object\n\t\t\tthis.clearSelection(fireSignal);\n\t\t}\n\t\tif (obj.selected) {\n\t\t\tif (this.toggleSelection) {\n\t\t\t\tif (fireSignal) {\n\t\t\t\t\tthis.onDeselect.dispatch(obj);\n\t\t\t\t}\n\t\t\t\tobj.deselect();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tobj.select();\n\t\t}\n\n\t\tthis.selected = obj;\n\t\tif (fireSignal) {\n\t\t\tthis.onSelect.dispatch(obj);\n\t\t}\n\t},\n\n\tclearSelection: function(fireSignal) {\n\t\tfireSignal = fireSignal || true;\n\t\tif (this.selected) {\n\t\t\tif (fireSignal) {\n\t\t\t\tthis.onDeselect.dispatch(this.selected);\n\t\t\t}\n\t\t\tthis.selected.deselect();\n\t\t}\n\t\tthis.selected = null;\n\t},\n\n\tonMouse: function(type, obj) {\n\t\tswitch (type) {\n\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\tif (!obj) {\n\t\t\t\t\tthis.clearSelection();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.CLICK:\n\t\t\t\tthis.select(obj);\n\t\t\t\tbreak;\n\t\t}\n\t}\n};\n\nvg.SelectionManager.prototype.constructor = vg.SelectionManager;\n","/*\n\tExample tile class that constructs its geometry for rendering and holds some gameplay properties.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n*/\nvg.Tile = function(config) {\n\tconfig = config || {};\n\tvar settings = {\n\t\tcell: null, // required vg.Cell\n\t\tgeometry: null, // required threejs geometry\n\t\tmaterial: null // not required but it would improve performance significantly\n\t};\n\tsettings = vg.Tools.merge(settings, config);\n\n\tif (!settings.cell || !settings.geometry) {\n\t\tthrow new Error('Missing vg.Tile configuration');\n\t}\n\n\tthis.cell = settings.cell;\n\tif (this.cell.tile && this.cell.tile !== this) this.cell.tile.dispose(); // remove whatever was there\n\tthis.cell.tile = this;\n\n\tthis.uniqueID = vg.Tools.generateID();\n\n\tthis.geometry = settings.geometry;\n\tthis.material = settings.material;\n\tif (!this.material) {\n\t\tthis.material = new THREE.MeshPhongMaterial({\n\t\t\tcolor: vg.Tools.randomizeRGB('30, 30, 30', 13)\n\t\t});\n\t}\n\n\tthis.objectType = vg.TILE;\n\tthis.entity = null;\n\tthis.userData = {};\n\n\tthis.selected = false;\n\tthis.highlight = '0x0084cc';\n\n\tthis.mesh = new THREE.Mesh(this.geometry, this.material);\n\tthis.mesh.userData.structure = this;\n\n\t// create references so we can control orientation through this (Tile), instead of drilling down\n\tthis.position = this.mesh.position;\n\tthis.rotation = this.mesh.rotation;\n\n\t// rotate it to face \"up\" (the threejs coordinate space is Y+)\n\tthis.rotation.x = -90 * vg.DEG_TO_RAD;\n\tthis.mesh.scale.set(settings.scale, settings.scale, 1);\n\n\tif (this.material.emissive) {\n\t\tthis._emissive = this.material.emissive.getHex();\n\t}\n\telse {\n\t\tthis._emissive = null;\n\t}\n};\n\nvg.Tile.prototype = {\n\tselect: function() {\n\t\tif (this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this.highlight);\n\t\t}\n\t\tthis.selected = true;\n\t\treturn this;\n\t},\n\n\tdeselect: function() {\n\t\tif (this._emissive !== null && this.material.emissive) {\n\t\t\tthis.material.emissive.setHex(this._emissive);\n\t\t}\n\t\tthis.selected = false;\n\t\treturn this;\n\t},\n\n\ttoggle: function() {\n\t\tif (this.selected) {\n\t\t\tthis.deselect();\n\t\t}\n\t\telse {\n\t\t\tthis.select();\n\t\t}\n\t\treturn this;\n\t},\n\n\tdispose: function() {\n\t\tif (this.cell && this.cell.tile) this.cell.tile = null;\n\t\tthis.cell = null;\n\t\tthis.position = null;\n\t\tthis.rotation = null;\n\t\tif (this.mesh.parent) this.mesh.parent.remove(this.mesh);\n\t\tthis.mesh.userData.structure = null;\n\t\tthis.mesh = null;\n\t\tthis.material = null;\n\t\tthis.userData = null;\n\t\tthis.entity = null;\n\t\tthis.geometry = null;\n\t\tthis._emissive = null;\n\t}\n};\n\nvg.Tile.prototype.constructor = vg.Tile;\n"],"sourceRoot":"/source/"}