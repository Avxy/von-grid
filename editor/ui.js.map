{"version":3,"sources":["components/tool-menu.js","components/lightbox.js","components/form-newmap.js","components/form-map-settings.js","components/flyout.js","components/app-menu.js","ui.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ui.js","sourcesContent":["riot.tag2('tool-menu', '<ul class=\"tool-menu__list\"> <li class=\"tool-menu__item {tool-menu__item--active: active}\" each=\"{items}\" data=\"{this}\" title=\"{displayText}\" onclick=\"{parent.clickTool}\"> <img riot-src=\"images/{icon}\"> </li> </ul>', '', '', function(opts) {\n\tthis.items = [\n\t\t{\n\t\t\tname: 'ADD_TILE',\n\t\t\tdisplayText: 'Add Tile',\n\t\t\ticon: 'add-tile.png',\n\t\t\tactive: true\n\t\t},\n\t\t{\n\t\t\tname: 'REMOVE_TILE',\n\t\t\tdisplayText: 'Remove Tile',\n\t\t\ticon: 'remove-tile.png',\n\t\t\tactive: false\n\t\t},\n\t\t{\n\t\t\tname: 'WALK_TILE',\n\t\t\tdisplayText: 'Set Tile Walkability',\n\t\t\ticon: 'set-walkability.png',\n\t\t\tactive: false\n\t\t},\n\t];\n\n\tthis.clickTool = function(evt) {\n\t\tvar item = evt.item;\n\t\tif (ui.activeTool.name === item.name) return;\n\n\t\tui.activeTool.active = false;\n\n\t\titem.active = true;\n\t\tui.activeTool = item;\n\n\t\tui.trigger(ui.Events.TOOL_CHANGE, ui.Tools[item.name]);\n\t\tthis.update();\n\t}.bind(this)\n\n\tthis.on('mount', function() {\n\t\tui.activeTool = this.items[0];\n\t\tui.trigger(ui.Events.TOOL_CHANGE, ui.Tools[ui.activeTool]);\n\t});\n}, '{ }');","riot.tag2('lightbox', '<div class=\"lightbox__overlay absolute\" onclick=\"{dismiss}\"></div> <div class=\"lightbox__panel flex-container\"> <yield></yield> <button class=\"overlay__close-btn\" onclick=\"{dismiss}\"><i class=\"icon-cancel\"></i></button> </div>', '', 'class=\"flex-container absolute hidden\"', function(opts) {\n\tthis.dismiss = function() {\n\t\tthis.root.classList.add('hidden');\n\t}.bind(this)\n\n\tui.on(ui.Events.HIDE_OVERLAY, this.dismiss);\n}, '{ }');","riot.tag2('form-newmap', '<span> <label for=\"mapSize\">Map size:</label> <input name=\"mapSize\" value=\"40\" min=\"1\" max=\"{maxMapSize}\" type=\"number\"> </span> <span> <label for=\"cellSize\">Cell size:</label> <input name=\"cellSize\" value=\"10\" min=\"1\" type=\"number\"> </span> <span> <button onclick=\"{onCreate}\">Create</buttn> </span>', '', 'class=\"flex-container\"', function(opts) {\n\tthis.maxMapSize = 1000;\n\n\tthis.onCreate = function() {\n\t\tif (this.mapSize.value > this.maxMapSize) {\n\t\t\tthis.mapSize.value = this.maxMapSize;\n\t\t}\n\n\t\tui.trigger(ui.Events.NEW_MAP, this.mapSize.value, this.cellSize.value);\n\t\tui.trigger(ui.Events.HIDE_OVERLAY);\n\t}.bind(this)\n}, '{ }');","riot.tag2('form-map-settings', '<span> <label for=\"mapSize\">Map size:</label> <input name=\"mapSize\" value=\"5\" min=\"1\" max=\"{maxMapSize}\" type=\"number\"> <button onclick=\"{onMapUpdate}\">Create Map</button> </span> <span> <label for=\"cellSize\">Cell size:</label> <input name=\"cellSize\" value=\"10\" min=\"1\" type=\"number\"> <button onclick=\"{onMapUpdate}\">Update Map</button> </span> <span> <label for=\"heightStep\">Height step:</label> <input name=\"heightStep\" value=\"3\" min=\"1\" type=\"number\"> <button onclick=\"{onMapUpdate}\">Update Map</button> </span> <span> <label for=\"maxTileHeight\">Max Tile Height:</label> <input name=\"maxTileHeight\" value=\"30\" min=\"1\" type=\"number\"> <button onclick=\"{onMapUpdate}\">Update</button> </span> <div class=\"form-group\"> <span> <label for=\"planeSize\">Plane size:</label> <input name=\"planeSize\" value=\"50\" min=\"1\" type=\"number\"> </span> <br> <span> <label for=\"planeColor\">Plane color:</label> <input name=\"planeColor\" value=\"#ffffff\" type=\"color\"> </span> <br> <button onclick=\"{onMapUpdate}\">Update Plane</button> <div>', '', 'class=\"flex-container\"', function(opts) {\n\tthis.maxMapSize = 1000;\n\n\tthis.updateSettings = function(settings) {\n\t\tthis.mapSize.value = settings.mapSize;\n\t\tthis.cellSize.value = settings.cellSize;\n\t\tthis.heightStep.value = settings.heightStep;\n\t\tthis.maxTileHeight.value = settings.maxTileHeight;\n\t\tthis.planeSize.value = settings.planeSize;\n\t\tthis.planeColor.value = settings.planeColor;\n\t\tthis.update();\n\t}.bind(this)\n\n\tthis.onMapUpdate = function() {\n\t\tif (this.mapSize.value > this.maxMapSize) {\n\t\t\tthis.mapSize.value = this.maxMapSize;\n\t\t}\n\n\t\tui.trigger(ui.Events.UPDATE_SETTINGS, {\n\t\t\tmapSize: parseInt(this.mapSize.value),\n\t\t\tcellSize: parseInt(this.cellSize.value),\n\t\t\theightStep: parseInt(this.heightStep.value),\n\t\t\tmaxTileHeight: parseInt(this.maxTileHeight.value),\n\t\t\tplaneSize: parseInt(this.planeSize.value),\n\t\t\tplaneColor: this.planeColor.value,\n\t\t});\n\n\t}.bind(this)\n\n\tthis.on('mount unmount', function(evt) {\n\t\tif (evt === 'mount') {\n\t\t\tui.on(ui.Events.UPDATE_SETTINGS, this.updateSettings);\n\t\t}\n\t\telse if (evt === 'unmount') {\n\t\t\tui.off(ui.Events.UPDATE_SETTINGS, this.updateSettings);\n\t\t}\n\t});\n}, '{ }');","riot.tag2('flyout', '<div class=\"flyout__panel flex-container\"> <yield></yield> <button class=\"overlay__close-btn\" onclick=\"{dismiss}\"><i class=\"icon-cancel\"></i></button> </div>', '', 'class=\"flex-container hidden\"', function(opts) {\n\tthis.dismiss = function() {\n\t\tthis.root.classList.add('hidden');\n\t}.bind(this)\n\n\tui.on(ui.Events.HIDE_FLYOUT, this.dismiss);\n}, '{ }');","riot.tag2('app-menu', '<ul class=\"app-menu__list\"> <li class=\"app-menu__item\" onclick=\"{onClick}\" data-action=\"settings\"> <i class=\"icon-cogs\"></i>Map </li> <li class=\"app-menu__item\" onclick=\"{onClick}\" data-action=\"saveMap\"> <i class=\"icon-download\"></i>Save </li> <li class=\"app-menu__item\" onclick=\"{onClick}\" data-action=\"loadMap\"> <i class=\"icon-cw\"></i>Load </li> <li class=\"app-menu__item\" onclick=\"{onClick}\" data-action=\"showHelp\"> <i class=\"icon-help\"></i>Help </li> </ul>', '', '', function(opts) {\n\tthis.onClick = function(evt) {\n\t\tvar action = evt.target.dataset.action;\n\n\t\tswitch (action) {\n\t\t\tcase 'settings':\n\t\t\t\tvar el = document.getElementById('js-flyout-settings');\n\t\t\t\tif (el.classList.contains('hidden')) {\n\t\t\t\t\tel.classList.remove('hidden');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tel.classList.add('hidden');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'saveMap':\n\t\t\t\tui.trigger(ui.Events.SAVE_MAP);\n\t\t\t\tbreak;\n\t\t\tcase 'loadMap':\n\t\t\t\tui.trigger(ui.Events.LOAD_MAP);\n\t\t\t\tbreak;\n\t\t\tcase 'showHelp':\n\t\t\t\tvar el = document.getElementById('js-overlay-help');\n\t\t\t\tel.classList.remove('hidden');\n\t\t\t\tbreak;\n\t\t}\n\t}.bind(this)\n}, '{ }');","var ui = {\n\tactiveTool: null,\n\n\tEvents: {\n\t\tTOOL_CHANGE: 'tool-change',\n\t\tUPDATE_SETTINGS: 'update-map-settings',\n\t\tNEW_MAP: 'new-map',\n\t\tSAVE_MAP: 'save-map',\n\t\tLOAD_MAP: 'load-map',\n\t\tHIDE_OVERLAY: 'ui-hide-overlay',\n\t\tHIDE_FLYOUT: 'ui-hide-flyout'\n\t},\n\n\tTools: {\n\t\tADD_TILE: 'add-tile',\n\t\tREMOVE_TILE: 'remove-tile',\n\t\tWALK_TILE: 'set-tile-walk',\n\t}\n};\n\nriot.observable(ui);\nriot.mount('*');\n"],"sourceRoot":"/source/"}