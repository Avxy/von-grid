{"version":3,"sources":["nexus.js","tower.js","walkableTile.js","removeTile.js","data.js","addTile.js","motor.js","keyboard.js","toolbag.js","main.js","Input.js","EditorPlane.js"],"names":["define","grid","board","mouse","scene","input","plane","tileAction","vg","Signal","objAction","userAction","save","TILE_CHANGE_HEIGHT","TILE_ADD","TILE_REMOVE","TILE_CHANGE_WALKABLE","over","cell","tile","mesh","nexus","down","walkableTile","up","walkable","tower","dispatch","require","onOver","onDown","onUp","action","removeTile","_store","changed","get","key","this","set","val","window","localStorage","JSON","stringify","load","json","data","parse","err","console","warn","addTile","getTileAtCell","newCell","Cell","copy","h","Math","abs","wheel","heightStep","newTile","generateTile","dataChanged","oldData","newData","settings","add","on","_brake","requestAnimationFrame","_update","addEventListener","onFocus","onBlur","off","removeEventListener","cb","scope","k","_hashStr","toString","_has","_steps","push","func","remove","i","splice","length","o","call","n","evt","str","chr","len","hash","charCodeAt","keyCode","shift","ctrl","signal","eventType","DOWN","UP","document","code","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_ENTER","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","COLON","EQUALS","UNDERSCORE","QUESTION_MARK","TILDE","OPEN_BRACKET","BACKWARD_SLASH","CLOSED_BRACKET","QUOTES","BACKSPACE","TAB","CLEAR","ENTER","SHIFT","CTRL","ALT","CAPS_LOCK","ESC","SPACEBAR","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","RIGHT","INSERT","DELETE","HELP","NUM_LOCK","update","currentGridCell","pixelToCell","editorWorldPos","keyboard","ui","activeTool","name","allHits","equals","prevGridCell","toolChange","Tools","ADD_TILE","tool","REMOVE_TILE","WALK_TILE","onUserAction","type","overTile","rightDown","MouseCaster","WHEEL","controls","enabled","autogenerated","dispose","_cel","dif","lastHeight","last","round","select","OVER","OUT","motor","Vector3","Events","TOOL_CHANGE","wheelTimer","active","dirtyMap","saveTimer","map","log","render","onControlWheel","onMapChange","timeTilAutoSave","toJSON","loadMap","fromJSON","setGrid","generateTilemap","generatePlane","generateHoverMesh","updatePlane","planeColor","planeSize","saveMap","output","replace","exportString","filename","blob","Blob","objectURL","URL","createObjectURL","link","href","download","target","createEvent","initMouseEvent","dispatchEvent","Input","EditorPlane","fileInput","createElement","file","files","reader","FileReader","onload","e","result","readAsText","SAVE_MAP","LOAD_MAP","click","canvas","getElementById","Scene","element","cameraPosition","x","y","z","maxPolarAngle","PI","HexGrid","Board","group","camera","focusOn","trigger","UPDATE_SETTINGS","generate","size","mapSize","cellSize","maxTileHeight","updateCellSize","style","display","body","appendChild","onMouse","mouseDelta","mousePanMinDistance","_travel","prototype","hit","point","dx","screenPosition","dy","sqrt","obj","deselect","CLICK","material","MeshBasicMaterial","color","side","DoubleSide","hoverMesh","_actualSize","newColor","parseInt","setHex","HEX","SQRT3","_cellWidth","SQR","geometry","parent","generateOverlay","CircleGeometry","PlaneGeometry","Mesh","rotation","DEG_TO_RAD","generateTilePoly","container","pickedObject","position","cellToPixel","visible"],"mappings":"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","file":"app.js","sourcesContent":["define('nexus', {\n\tgrid: null,\n\tboard: null,\n\tmouse: null,\n\tscene: null,\n\tinput: null,\n\tplane: null,\n});\n","define('tower', {\n\ttileAction: new vg.Signal(),\n\tobjAction: new vg.Signal(),\n\tuserAction: new vg.Signal(),\n\n\tsave: new vg.Signal(),\n\n\tTILE_CHANGE_HEIGHT: 'cell.change.height',\n\tTILE_ADD: 'cell.add',\n\tTILE_REMOVE: 'cell.remove',\n\tTILE_CHANGE_WALKABLE: 'cell.change.walkable',\n});\n","define('walkableTile', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\n\tfunction over(cell, tile, mesh) {\n\t\tif (tile && nexus.mouse.down) {\n\t\t\twalkableTile(tile);\n\t\t}\n\t}\n\n\tfunction down(cell, tile, mesh) {\n\t\tif (tile) {\n\t\t\twalkableTile(tile);\n\t\t}\n\t}\n\n\tfunction up(cell, tile, mesh) {\n\n\t}\n\n\tfunction walkableTile(tile) {\n\t\tif (!tile) return;\n\n\t\ttile.cell.walkable = !tile.cell.walkable;\n\n\t\ttower.tileAction.dispatch(tower.TILE_CHANGE_WALKABLE, tile);\n\n\t\treturn tile;\n\t}\n\n\treturn {\n\t\tonOver: over,\n\t\tonDown: down,\n\t\tonUp: up,\n\t\taction: walkableTile\n\t};\n});\n","define('removeTile', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\t// var keyboard = require('keyboard');\n\t// var motor = require('motor');\n\n\t// var disabled = false;\n\n\tfunction over(cell, tile, mesh) {\n\t\tif (tile && nexus.mouse.down) {\n\t\t\tremoveTile(tile);\n\t\t}\n\t}\n\n\tfunction down(cell, tile, mesh) {\n\t\tif (tile) {\n\t\t\tremoveTile(tile);\n\t\t}\n\t}\n\n\tfunction up(cell, tile, mesh) {\n\n\t}\n\n\tfunction removeTile(tile) {\n\t\tnexus.board.removeTile(tile);\n\t\ttower.tileAction.dispatch(tower.TILE_REMOVE, tile);\n\t}\n\n\treturn {\n\t\tonOver: over,\n\t\tonDown: down,\n\t\tonUp: up,\n\t\taction: removeTile\n\t};\n});\n","/*\n\tHandles JSON for whatever data needs to be saved to localStorage, and provides a convenient signal for whenever that data changes.\n*/\ndefine('data', {\n\t_store: {},\n\tchanged: new vg.Signal(),\n\n\tget: function(key) {\n\t\treturn this._store[key] || null;\n\t},\n\n\tset: function(key, val) {\n\t\t// fire event first so we can retrieve old data before it's overwritten (just in case)\n\t\tthis.changed.dispatch(key, this._store[key], val);\n\t\tthis._store[key] = val;\n\t},\n\n\tsave: function() {\n\t\twindow.localStorage['vongrid'] = JSON.stringify(this._store);\n\t},\n\n\tload: function(json) {\n\t\tvar data = window.localStorage['vongrid'];\n\t\tif (json || data) {\n\t\t\ttry {\n\t\t\t\tthis._store = json || JSON.parse(data);\n\t\t\t\tthis.changed.dispatch('load-success', this._store);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.warn('Error loading editor data');\n\t\t\t\tthis.changed.dispatch('load-failure');\n\t\t\t}\n\t\t}\n\t}\n});\n","define('addTile', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar data = require('data');\n\n\tvar heightStep = 3;\n\n\tfunction over(cell, tile, mesh) {\n\t\tif (!tile && nexus.mouse.down) {\n\t\t\taddTile(cell);\n\t\t}\n\t}\n\n\tfunction down(cell, tile, mesh) {\n\t\tif (!tile) {\n\t\t\taddTile(cell);\n\t\t}\n\t}\n\n\tfunction up(cell, tile, mesh) {\n\n\t}\n\n\tfunction addTile(cell) {\n\t\tif (!cell || nexus.board.getTileAtCell(cell)) return;\n\n\t\tvar newCell = new vg.Cell();\n\t\tnewCell.copy(cell);\n\t\tnewCell.h = Math.abs(nexus.mouse.wheel * heightStep);\n\n\t\tvar newTile = nexus.grid.generateTile(newCell, 0.95);\n\n\t\tnexus.board.addTile(newTile);\n\n\t\ttower.tileAction.dispatch(tower.TILE_ADD, newTile);\n\n\t\treturn newTile;\n\t}\n\n\tfunction dataChanged(key, oldData, newData) {\n\t\tif (key === 'settings') {\n\t\t\theightStep = newData.heightStep;\n\t\t}\n\t\tif (key === 'load-success') {\n\t\t\theightStep = oldData.settings.heightStep;\n\t\t}\n\t}\n\n\tdata.changed.add(dataChanged, this);\n\n\treturn {\n\t\tonOver: over,\n\t\tonDown: down,\n\t\tonUp: up,\n\t\taction: addTile\n\t};\n});\n","/*\n\tThis is the ONLY place in the app that has a requestAnimationFrame handler.\n\tAll modules attach their functions to this module if they want in on the RAF.\n */\ndefine('motor', function() {\n\tvar _brake = false;\n\tvar _steps = [];\n\n\tfunction on() {\n\t\t_brake = false;\n\t\twindow.requestAnimationFrame(_update);\n\t\twindow.addEventListener('focus', onFocus, false);\n\t\twindow.addEventListener('blur', onBlur, false);\n\t}\n\n\tfunction off() {\n\t\t_brake = true;\n\t\twindow.removeEventListener('focus', onFocus, false);\n\t\twindow.removeEventListener('blur', onBlur, false);\n\t}\n\n\t// in order to be able to ID functions we have to hash them to generate unique-ish keys for us to find them with later\n\t// if we don't do this, we won't be able to remove callbacks that were bound and save us from binding callbacks multiple times all over the place\n\tfunction add(cb, scope) {\n\t\tvar k = _hashStr(cb.toString());\n\t\tvar h = _has(k);\n\t\tif (h === -1) {\n\t\t\t_steps.push({\n\t\t\t\tfunc: cb,\n\t\t\t\tscope: scope,\n\t\t\t\tkey: k\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction remove(cb) {\n\t\tvar k = _hashStr(cb.toString());\n\t\tvar i = _has(k);\n\t\tif (i !== -1) {\n\t\t\t_steps.splice(i, 1);\n\t\t}\n\t}\n\n\tfunction _update() {\n\t\tif (_brake) return;\n\t\twindow.requestAnimationFrame(_update);\n\n\t\tfor (var i = 0; i < _steps.length; i++) {\n\t\t\tvar o = _steps[i];\n\t\t\to.func.call(o.scope || null);\n\t\t}\n\t}\n\n\t// check if the handler already has iaw.motor particular callback\n\tfunction _has(k) {\n\t\tvar n = -1;\n\t\tvar i;\n\t\tfor (i = 0; i < _steps.length; i++) {\n\t\t\tn = _steps[i].key;\n\t\t\tif (n === k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tfunction onFocus(evt) {\n\t\t_brake = false;\n\t\t_update();\n\t}\n\n\tfunction onBlur(evt) {\n\t\t_brake = true;\n\t}\n\n\tfunction _hashStr(str) {\n\t\tvar hash = 0, i, chr, len;\n\t\tif (str.length === 0) return hash;\n\t\tfor (i = 0, len = str.length; i < len; i++) {\n\t\t\tchr = str.charCodeAt(i);\n\t\t\thash = ((hash << 5) - hash) + chr;\n\t\t\thash |= 0;\n\t\t}\n\t\treturn hash;\n\t}\n\n\treturn {\n\t\ton: on,\n\t\toff: off,\n\t\tadd: add,\n\t\tremove: remove,\n\t};\n});\n","define('keyboard', function() {\n\n\tfunction onDown(evt) {\n\t\tswitch (evt.keyCode) {\n\t\t\tcase 16:\n\t\t\t\tk.shift = true;\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tk.ctrl = true;\n\t\t\t\tbreak;\n\t\t}\n\t\tk.signal.dispatch(k.eventType.DOWN, evt.keyCode);\n\t}\n\n\tfunction onUp(evt) {\n\t\tswitch (evt.keyCode) {\n\t\t\tcase 16:\n\t\t\t\tk.shift = false;\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tk.ctrl = false;\n\t\t\t\tbreak;\n\t\t}\n\t\tk.signal.dispatch(k.eventType.UP, evt.keyCode);\n\t}\n\n\tvar k = {\n\t\tshift: false,\n\t\tctrl: false,\n\n\t\teventType: {\n\t\t\tDOWN: 'down',\n\t\t\tUP: 'up'\n\t\t},\n\n\t\tsignal: new vg.Signal(),\n\n\t\ton: function() {\n\t\t\tdocument.addEventListener('keydown', onDown, false);\n\t\t\tdocument.addEventListener('keyup', onUp, false);\n\t\t},\n\n\t\toff: function() {\n\t\t\tdocument.removeEventListener('keydown', onDown);\n\t\t\tdocument.removeEventListener('keyup', onUp);\n\t\t},\n\n\t\tcode: {\n\t\t\tA: 'A'.charCodeAt(0),\n\t\t\tB: 'B'.charCodeAt(0),\n\t\t\tC: 'C'.charCodeAt(0),\n\t\t\tD: 'D'.charCodeAt(0),\n\t\t\tE: 'E'.charCodeAt(0),\n\t\t\tF: 'F'.charCodeAt(0),\n\t\t\tG: 'G'.charCodeAt(0),\n\t\t\tH: 'H'.charCodeAt(0),\n\t\t\tI: 'I'.charCodeAt(0),\n\t\t\tJ: 'J'.charCodeAt(0),\n\t\t\tK: 'K'.charCodeAt(0),\n\t\t\tL: 'L'.charCodeAt(0),\n\t\t\tM: 'M'.charCodeAt(0),\n\t\t\tN: 'N'.charCodeAt(0),\n\t\t\tO: 'O'.charCodeAt(0),\n\t\t\tP: 'P'.charCodeAt(0),\n\t\t\tQ: 'Q'.charCodeAt(0),\n\t\t\tR: 'R'.charCodeAt(0),\n\t\t\tS: 'S'.charCodeAt(0),\n\t\t\tT: 'T'.charCodeAt(0),\n\t\t\tU: 'U'.charCodeAt(0),\n\t\t\tV: 'V'.charCodeAt(0),\n\t\t\tW: 'W'.charCodeAt(0),\n\t\t\tX: 'X'.charCodeAt(0),\n\t\t\tY: 'Y'.charCodeAt(0),\n\t\t\tZ: 'Z'.charCodeAt(0),\n\t\t\tZERO: '0'.charCodeAt(0),\n\t\t\tONE: '1'.charCodeAt(0),\n\t\t\tTWO: '2'.charCodeAt(0),\n\t\t\tTHREE: '3'.charCodeAt(0),\n\t\t\tFOUR: '4'.charCodeAt(0),\n\t\t\tFIVE: '5'.charCodeAt(0),\n\t\t\tSIX: '6'.charCodeAt(0),\n\t\t\tSEVEN: '7'.charCodeAt(0),\n\t\t\tEIGHT: '8'.charCodeAt(0),\n\t\t\tNINE: '9'.charCodeAt(0),\n\t\t\tNUMPAD_0: 96,\n\t\t\tNUMPAD_1: 97,\n\t\t\tNUMPAD_2: 98,\n\t\t\tNUMPAD_3: 99,\n\t\t\tNUMPAD_4: 100,\n\t\t\tNUMPAD_5: 101,\n\t\t\tNUMPAD_6: 102,\n\t\t\tNUMPAD_7: 103,\n\t\t\tNUMPAD_8: 104,\n\t\t\tNUMPAD_9: 105,\n\t\t\tNUMPAD_MULTIPLY: 106,\n\t\t\tNUMPAD_ADD: 107,\n\t\t\tNUMPAD_ENTER: 108,\n\t\t\tNUMPAD_SUBTRACT: 109,\n\t\t\tNUMPAD_DECIMAL: 110,\n\t\t\tNUMPAD_DIVIDE: 111,\n\t\t\tF1: 112,\n\t\t\tF2: 113,\n\t\t\tF3: 114,\n\t\t\tF4: 115,\n\t\t\tF5: 116,\n\t\t\tF6: 117,\n\t\t\tF7: 118,\n\t\t\tF8: 119,\n\t\t\tF9: 120,\n\t\t\tF10: 121,\n\t\t\tF11: 122,\n\t\t\tF12: 123,\n\t\t\tF13: 124,\n\t\t\tF14: 125,\n\t\t\tF15: 126,\n\t\t\tCOLON: 186,\n\t\t\tEQUALS: 187,\n\t\t\tUNDERSCORE: 189,\n\t\t\tQUESTION_MARK: 191,\n\t\t\tTILDE: 192,\n\t\t\tOPEN_BRACKET: 219,\n\t\t\tBACKWARD_SLASH: 220,\n\t\t\tCLOSED_BRACKET: 221,\n\t\t\tQUOTES: 222,\n\t\t\tBACKSPACE: 8,\n\t\t\tTAB: 9,\n\t\t\tCLEAR: 12,\n\t\t\tENTER: 13,\n\t\t\tSHIFT: 16,\n\t\t\tCTRL: 17,\n\t\t\tALT: 18,\n\t\t\tCAPS_LOCK: 20,\n\t\t\tESC: 27,\n\t\t\tSPACEBAR: 32,\n\t\t\tPAGE_UP: 33,\n\t\t\tPAGE_DOWN: 34,\n\t\t\tEND: 35,\n\t\t\tHOME: 36,\n\t\t\tLEFT: 37,\n\t\t\tUP: 38,\n\t\t\tRIGHT: 39,\n\t\t\tDOWN: 40,\n\t\t\tINSERT: 45,\n\t\t\tDELETE: 46,\n\t\t\tHELP: 47,\n\t\t\tNUM_LOCK: 144\n\t\t}\n\t};\n\n\treturn k;\n});\n","/*\n\tManages cells and objects on the map.\n*/\ndefine('toolbag', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\tvar motor = require('motor');\n\n\tvar addTile = require('addTile');\n\tvar removeTile = require('removeTile');\n\tvar walkableTile = require('walkableTile');\n\n\tvar tool = addTile; // should be the first tool in the bag as determined by tool-menu.tag\n\n\tvar heightStep = 3;\n\tvar lastHeight = 1;\n\tvar currentGridCell = null;\n\tvar prevGridCell = new THREE.Vector3();\n\tvar _cel = new vg.Cell();\n\n\ttower.userAction.add(onUserAction, this);\n\tui.on(ui.Events.TOOL_CHANGE, toolChange);\n\n\tmotor.add(update);\n\n\tfunction update() {\n\t\tcurrentGridCell = nexus.grid.pixelToCell(nexus.input.editorWorldPos);\n\t\tif (!keyboard.ctrl && nexus.mouse.down && ui.activeTool.name === 'ADD_TILE' && nexus.mouse.allHits && nexus.mouse.allHits.length) {\n\t\t\t// special case since the over event doesn't fire if there's no tile\n\t\t\tif (!currentGridCell.equals(prevGridCell)) {\n\t\t\t\taddTile.action(currentGridCell, null);\n\t\t\t}\n\t\t\tprevGridCell.copy(currentGridCell);\n\t\t}\n\t}\n\n\tfunction toolChange(evt) {\n\t\tswitch (evt) {\n\t\t\tcase ui.Tools.ADD_TILE:\n\t\t\t\ttool = addTile;\n\t\t\t\tbreak;\n\t\t\tcase ui.Tools.REMOVE_TILE:\n\t\t\t\ttool = removeTile;\n\t\t\t\tbreak;\n\t\t\tcase ui.Tools.WALK_TILE:\n\t\t\t\ttool = walkableTile;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttool = null;\n\t\t\t\tbreak;\n\t\t}\n\t\t// console.log('Tool selected: '+evt);\n\t}\n\n\tfunction onUserAction(type, overTile, data) {\n\t\t// var hit = nexus.mouse.allHits[0];\n\t\tif (keyboard.ctrl || data === null || nexus.mouse.rightDown || !tool) {\n\t\t\t// there's no picked object, which means the user isn't hovering over any mesh in the scene\n\t\t\t// also ignore right-mouse clicks\n\t\t\treturn;\n\t\t}\n\t\tswitch (type) {\n\t\t\tcase vg.MouseCaster.WHEEL:\n\t\t\t\tnexus.scene.controls.enabled = false;\n\t\t\t\tif (keyboard.shift && overTile && nexus.grid.autogenerated) {\n\t\t\t\t\tif (!overTile.cell) {\n\t\t\t\t\t\toverTile.dispose();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t_cel.copy(overTile.cell);\n\t\t\t\t\t_cel.tile = null;\n\n\t\t\t\t\tvar dif = lastHeight - data;\n\t\t\t\t\tvar last = _cel.h;\n\t\t\t\t\t_cel.h += dif > 0 ? -heightStep : heightStep;\n\t\t\t\t\tif (_cel.h < 1) _cel.h = 1;\n\n\t\t\t\t\tnexus.mouse.wheel = Math.round((_cel.h / heightStep) + (dif > 0 ? -1 : 1));\n\t\t\t\t\tlastHeight = nexus.mouse.wheel;\n\n\t\t\t\t\tif (last === _cel.h) return;\n\t\t\t\t\tremoveTile.action(overTile);\n\n\t\t\t\t\tvar tile = addTile.action(_cel);\n\t\t\t\t\ttile.select();\n\n\t\t\t\t\ttower.tileAction.dispatch(tower.TILE_CHANGE_HEIGHT, tile);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\ttool.onOver(currentGridCell, overTile, data);\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.OUT:\n\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\ttool.onDown(currentGridCell, overTile, data);\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\ttool.onUp(currentGridCell, overTile, data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\n\t};\n});\n","window.addEventListener('load', function(evt) {\n\tvar data = require('data');\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\tvar motor = require('motor');\n\n\tvar Input = require('Input');\n\tvar EditorPlane = require('EditorPlane');\n\n\tdata.load();\n\tvar map = data.get('map');\n\n\tvar timeTilAutoSave = 200; // timer runs per frame, 60fps\n\tvar saveTimer = 10;\n\tvar dirtyMap = false;\n\n\tvar fileInput = document.createElement('input');\n\tfileInput.type = 'file';\n\tfileInput.addEventListener('change', function(evt) {\n\t\tvar file = fileInput.files[0];\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar reader = new FileReader();\n\t\treader.onload = function(e) {\n\t\t\tvar json = null;\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(e.target.result);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.warn('File is not json format');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tloadMap(json);\n\t\t};\n\n\t\treader.readAsText(file);\n\n\t\treturn false;\n\t});\n\n\tui.on('error', function(evt) {\n\t\tconsole.warn(evt);\n\t});\n\n\tui.on(ui.Events.SAVE_MAP, function() {\n\t\tsaveMap();\n\t});\n\n\tui.on(ui.Events.LOAD_MAP, function() {\n\t\tfileInput.click();\n\t});\n\n\tkeyboard.on();\n\tmotor.on();\n\n\t// setup the thing\n\tvar canvas = document.getElementById('view');\n\tvar scene = new vg.Scene({\n\t\telement: canvas,\n\t\tcameraPosition: {x: 0, y: 300, z: 120},\n\t\t// light: new THREE.AmbientLight(0x000000)\n\t}, {\n\t\tmaxPolarAngle: (Math.PI / 2) - 0.01\n\t});\n\tnexus.scene = scene;\n\n\t// listen to the orbit controls to disable the raycaster while user adjusts the view\n\tscene.controls.addEventListener('wheel', onControlWheel);\n\n\tvar grid = new vg.HexGrid();\n\tnexus.grid = grid;\n\tvar board = new vg.Board(grid);\n\tnexus.board = board;\n\tvar mouse = new vg.MouseCaster(board.group, scene.camera, canvas);\n\tnexus.mouse = mouse;\n\tvar input = new Input(board.group, mouse);\n\tnexus.input = input;\n\tvar plane = new EditorPlane(board.group, grid, mouse);\n\tnexus.plane = plane;\n\n\ttower.tileAction.add(onMapChange, this);\n\ttower.save.add(onMapChange, this);\n\n\t// scene.add(board.group);\n\tscene.focusOn(board.group);\n\n\tif (map) {\n\t\tui.trigger(ui.Events.UPDATE_SETTINGS, data.get('settings'));\n\t\tloadMap(map);\n\t}\n\telse {\n\t\tgrid.generate({\n\t\t\tsize: 5 // size of the board\n\t\t});\n\t\tboard.generateTilemap();\n\t\tmap = grid.toJSON();\n\t\tdata.set('map', map);\n\n\t\tvar settings = {\n\t\t\tmapSize: grid.size,\n\t\t\tcellSize: grid.cellSize,\n\t\t\tplaneSize: plane.planeSize,\n\t\t\theightStep: 3,\n\t\t\tmaxTileHeight: 30,\n\t\t\tplaneColor: '#ffffff'\n\t\t};\n\t\tdata.set('settings', settings);\n\n\t\tconsole.log('Created a new map');\n\t\tdata.save();\n\n\t\tplane.generatePlane();\n\t\tplane.generateHoverMesh();\n\t}\n\n\tui.trigger(ui.Events.UPDATE_SETTINGS, data.get('settings'));\n\n\tscene.add(board.group);\n\n\tui.on(ui.Events.UPDATE_SETTINGS, function(settings) {\n\t\t// console.log('current grid size: '+grid.size+', new: '+settings.mapSize);\n\t\t// console.log('current cell size: '+grid.cellSize+', new: '+settings.cellSize);\n\t\tplane.updatePlane(settings.planeColor, settings.planeSize);\n\n\n\n\t\tdata.set('settings', settings);\n\t\tonMapChange();\n\n\t\tif (settings.mapSize === grid.size) {\n\t\t\tif (settings.cellSize === grid.cellSize) {\n\t\t\t\t// console.log('neither changed, ignored');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// console.log('only cell size changed');\n\t\t\tgrid.updateCellSize(settings.cellSize);\n\n\t\t\tplane.generatePlane();\n\t\t\tplane.generateHoverMesh();\n\n\t\t\tif (grid.autogenerated) {\n\t\t\t\tboard.generateTilemap();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// only map size or both changed\n\t\t\tgrid.updateCellSize(settings.cellSize);\n\t\t\tgrid.generate({\n\t\t\t\tsize: settings.mapSize\n\t\t\t});\n\n\t\t\tplane.generatePlane();\n\t\t\tplane.generateHoverMesh();\n\n\t\t\tif (grid.autogenerated) {\n\t\t\t\tboard.generateTilemap();\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction update() {\n\t\tif (wheelTimer < 10) {\n\t\t\twheelTimer++;\n\t\t\tif (wheelTimer === 10) {\n\t\t\t\tmouse.active = true;\n\t\t\t}\n\t\t}\n\t\tif (dirtyMap) {\n\t\t\tsaveTimer--;\n\t\t\tif (saveTimer === 0) {\n\t\t\t\tdirtyMap = false;\n\t\t\t\tdata.set('map', map);\n\t\t\t\tdata.save();\n\t\t\t\tconsole.log('Map saved');\n\t\t\t}\n\t\t}\n\t\tmouse.update();\n\t\tinput.update();\n\t\tplane.update();\n\t\tscene.render();\n\t}\n\tmotor.add(update);\n\n\tvar wheelTimer = 10;\n\tfunction onControlWheel() {\n\t\tmouse.active = false;\n\t\twheelTimer = 0;\n\t}\n\n\tfunction onMapChange() {\n\t\tdirtyMap = true;\n\t\tsaveTimer = timeTilAutoSave;\n\t\tmap = grid.toJSON();\n\t}\n\n\tfunction loadMap(json) {\n\t\tgrid.fromJSON(json);\n\t\tboard.setGrid(grid);\n\n\t\tif (json.autogenerated) {\n\t\t\tboard.generateTilemap();\n\t\t}\n\n\t\tplane.generatePlane();\n\t\tplane.generateHoverMesh();\n\n\t\tvar settings = data.get('settings');\n\t\tplane.updatePlane(settings.planeColor, settings.planeSize);\n\n\t\tconsole.log('Map load complete');\n\t}\n\n\tfunction saveMap() {\n\t\tvar output = null;\n\n\t\tmap = grid.toJSON();\n\n\t\ttry {\n\t\t\toutput = JSON.stringify(map, null, '\\t');\n\t\t\toutput = output.replace(/[\\n\\t]+([\\d\\.e\\-\\[\\]]+)/g, '$1');\n\t\t}\n\t\tcatch (err) {\n\t\t\toutput = JSON.stringify(map);\n\t\t}\n\n\t\texportString(output, 'hex-map.json');\n\t}\n\n\t// taken from https://github.com/mrdoob/three.js/blob/master/editor/js/Menubar.File.js\n\tvar link = document.createElement('a');\n\tlink.style.display = 'none';\n\tdocument.body.appendChild(link);\n\n\tfunction exportString(output, filename) {\n\t\tvar blob = new Blob([output], {type: 'text/plain'});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\n\t\tlink.href = objectURL;\n\t\tlink.download = filename || 'data.json';\n\t\tlink.target = '_blank';\n\n\t\tvar evt = document.createEvent('MouseEvents');\n\t\tevt.initMouseEvent(\n\t\t\t'click', true, false, window, 0, 0, 0, 0, 0,\n\t\t\tfalse, false, false, false, 0, null\n\t\t);\n\t\tlink.dispatchEvent(evt);\n\t}\n});\n","/*\n\tTranslates the MouseCaster's events into more relevant data that the editor uses.\n*/\ndefine('Input', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\n\tvar Input = function(scene, mouse) {\n\t\tthis.mouse = mouse;\n\t\tthis.mouse.signal.add(this.onMouse, this);\n\n\t\tthis.mouseDelta = new THREE.Vector3();\n\t\tthis.mousePanMinDistance = 0.1;\n\t\tthis.heightStep = 5;\n\t\tthis.editorWorldPos = new THREE.Vector3(); // current grid position of mouse\n\n\t\tthis.overTile = null;\n\n\t\tthis._travel = 0;\n\n\t\t/*keyboard.signal.add(function(type, code) {\n\t\t\tif (type === keyboard.eventType.DOWN) {\n\t\t\t\tif (code === keyboard.code.SHIFT) nexus.scene.controls.enabled = false;\n\t\t\t\telse if (code === keyboard.code.A) {\n\t\t\t\t\tnexus.scene.focusOn(nexus.board.tileGroup); // doesn't work??\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (code === keyboard.code.SHIFT) nexus.scene.controls.enabled = true;\n\t\t\t}\n\t\t}, this);*/\n\t};\n\n\tInput.prototype = {\n\t\tupdate: function() {\n\t\t\tvar hit = this.mouse.allHits[0];\n\t\t\tif (hit) { // fun fact, 3 references are faster than 1 function call\n\t\t\t\tthis.editorWorldPos.x = hit.point.x;\n\t\t\t\tthis.editorWorldPos.y = hit.point.y;\n\t\t\t\tthis.editorWorldPos.z = hit.point.z;\n\t\t\t}\n\t\t\tvar dx = this.mouseDelta.x - this.mouse.screenPosition.x;\n\t\t\tvar dy = this.mouseDelta.y - this.mouse.screenPosition.y;\n\t\t\tthis._travel += Math.sqrt(dx * dx + dy * dy); // fun fact, sqrt is on of the most expensive math ops\n\n\t\t\tif (keyboard.ctrl) {\n\t\t\t\tnexus.scene.controls.enabled = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnexus.scene.controls.enabled = false;\n\t\t\t}\n\t\t},\n\n\t\tonMouse: function(type, obj) {\n\t\t\tvar hit;\n\t\t\tif (this.mouse.allHits && this.mouse.allHits[0]) {\n\t\t\t\thit = this.mouse.allHits[0];\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase vg.MouseCaster.WHEEL:\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.WHEEL, this.overTile, obj);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis.overTile = obj.select();\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.OVER, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OUT:\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tobj.deselect();\n\t\t\t\t\t\tthis.overTile = null;\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.OUT, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\t\tthis.mouseDelta.copy(this.mouse.screenPosition);\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.DOWN, this.overTile, hit);\n\t\t\t\t\tthis._travel = 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\t\tif (this._travel > this.mousePanMinDistance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.UP, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.CLICK:\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.CLICK, this.overTile, hit);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Input;\n});\n","/*\n\t2D plane that the user moves mouse around on in order to build maps. Provides a working plane to navigate, and a visual aid for tile placement.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\ndefine('EditorPlane', function() {\n\n\tfunction EditorPlane(scene, grid, mouse) {\n\t\tthis.nexus = require('nexus');\n\t\tthis.tower = require('tower');\n\n\t\tthis.mesh = null;\n\t\tthis.material = new THREE.MeshBasicMaterial({\n\t\t\tcolor: 0xffffff,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\n\t\tthis.scene = scene;\n\t\tthis.grid = grid;\n\t\tthis.mouse = mouse;\n\t\tthis.board = this.nexus.board;\n\n\t\tthis.hoverMesh = null;\n\t\tthis.planeSize = grid.size;\n\t\tthis._actualSize = grid.size * grid.cellSize * 2;\n\n\t\t/*this.mouse.signal.add(onUserAction, this);\n\t\tfunction onUserAction(type, overCell) {\n\t\t\tswitch (type) {\n\t\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\t\tif (overCell) {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OUT:\n\t\t\t\t\tthis.hoverMesh.mesh.visible = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\t\tif (!overCell) {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}*/\n\t}\n\n\tEditorPlane.prototype = {\n\n\t\tupdatePlane: function(color, size) {\n\t\t\tvar newColor = parseInt(color.replace(/^#/, ''), 16);\n\t\t\tthis.material.color.setHex(newColor);\n\n\t\t\tif (this.planeSize !== size) {\n\t\t\t\tthis.planeSize = size;\n\t\t\t\tswitch (this.grid.type) {\n\t\t\t\t\tcase vg.HEX:\n\t\t\t\t\t\tthis._actualSize = size * (vg.SQRT3 * 0.5) * this.grid._cellWidth + this.grid.cellSize;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase vg.SQR:\n\t\t\t\t\t\tthis._actualSize = size * this.grid.cellSize * 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.generatePlane();\n\t\t\t}\n\t\t},\n\n\t\tgeneratePlane: function() {\n\t\t\tvar geometry;\n\t\t\tif (this.mesh && this.mesh.parent) {\n\t\t\t\tthis.mesh.parent.remove(this.mesh);\n\t\t\t\tthis.mesh.geometry.dispose();\n\t\t\t}\n\n\t\t\tthis.board.generateOverlay(this.planeSize);\n\n\t\t\tswitch (this.grid.type) {\n\t\t\t\tcase vg.HEX:\n\t\t\t\t\tgeometry = new THREE.CircleGeometry(this._actualSize, 6);\n\t\t\t\t\tbreak;\n\t\t\t\tcase vg.SQR:\n\t\t\t\t\tgeometry = new THREE.PlaneGeometry(this._actualSize, this._actualSize, 1, 1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('[EditorPlane.generatePlane] no grid type set');\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.mesh = new THREE.Mesh(geometry, this.material);\n\t\t\tthis.mesh.rotation.x = 90 * vg.DEG_TO_RAD;\n\t\t\t// this.mesh.position.y -= 0.1;\n\t\t\tif (this.grid.type === vg.HEX) {\n\t\t\t\tthis.mesh.rotation.z = 90 * vg.DEG_TO_RAD;\n\t\t\t}\n\t\t\tthis.scene.add(this.mesh);\n\t\t},\n\n\t\tgenerateHoverMesh: function() {\n\t\t\tif (this.hoverMesh && this.hoverMesh.parent) {\n\t\t\t\tthis.hoverMesh.parent.remove(this.hoverMesh);\n\t\t\t}\n\t\t\tthis.hoverMesh = this.grid.generateTilePoly(new THREE.MeshBasicMaterial({\n\t\t\t\tcolor: 0x1aaeff,\n\t\t\t\tside: THREE.DoubleSide\n\t\t\t}));\n\t\t\tthis.nexus.scene.container.add(this.hoverMesh);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tif (this.mouse.allHits.length && !this.mouse.pickedObject) {\n\t\t\t\tvar cell = this.grid.pixelToCell(this.nexus.input.editorWorldPos);\n\t\t\t\tthis.hoverMesh.position.copy(this.grid.cellToPixel(cell));\n\t\t\t\tthis.hoverMesh.position.y += 0.1;\n\t\t\t\tthis.hoverMesh.visible = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hoverMesh.visible = false;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn EditorPlane;\n});\n"],"sourceRoot":"/source/"}