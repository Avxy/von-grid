{"version":3,"sources":["main.js","keyboard.js","nexus.js","tower.js","Input.js","EditorPlane.js","motor.js","Editor.js","data.js"],"names":["window","addEventListener","evt","update","wheelTimer","mouse","active","dirtyMap","saveTimer","data","set","map","save","console","log","input","plane","scene","render","onControlWheel","onMapChange","timeTilAutoSave","grid","toJSON","loadMap","json","fromJSON","board","setGrid","autogenerated","generateTilemap","boardSize","generatePlane","generateOverlay","ui","trigger","Events","UPDATE_SETTINGS","mapSize","size","cellSize","saveMap","output","JSON","stringify","replace","err","exportString","filename","blob","Blob","type","objectURL","URL","createObjectURL","link","href","download","target","document","createEvent","initMouseEvent","dispatchEvent","require","tower","nexus","keyboard","motor","Input","EditorPlane","load","get","fileInput","createElement","file","files","reader","FileReader","onload","e","parse","result","warn","readAsText","on","SAVE_MAP","LOAD_MAP","click","canvas","getElementById","vg","Scene","element","cameraPosition","x","y","z","maxPolarAngle","Math","PI","controls","HexGrid","Board","MouseCaster","group","camera","tileAction","add","this","focusOn","generate","settings","updateCellSize","style","display","body","appendChild","define","onDown","keyCode","k","shift","ctrl","signal","dispatch","eventType","DOWN","onUp","UP","Signal","off","removeEventListener","code","A","charCodeAt","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_ENTER","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","COLON","EQUALS","UNDERSCORE","QUESTION_MARK","TILDE","OPEN_BRACKET","BACKWARD_SLASH","CLOSED_BRACKET","QUOTES","BACKSPACE","TAB","CLEAR","ENTER","SHIFT","CTRL","ALT","CAPS_LOCK","ESC","SPACEBAR","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","RIGHT","INSERT","DELETE","HELP","NUM_LOCK","objAction","userAction","TILE_CHANGE_HEIGHT","TILE_ADD","TILE_REMOVE","onMouse","mouseDelta","Vector3","mousePanMinDistance","heightStep","editorWorldPos","overTile","_travel","enabled","prototype","hit","allHits","point","dx","screenPosition","dy","sqrt","obj","WHEEL","OVER","select","OUT","deselect","copy","CLICK","geometry","mesh","material","MeshBasicMaterial","color","side","DoubleSide","hoverMesh","width","height","parent","remove","PlaneBufferGeometry","Mesh","rotation","DEG_TO_RAD","generateTilePoly","container","length","pickedObject","cell","pixelToCell","position","cellToPixel","visible","_brake","requestAnimationFrame","_update","onFocus","onBlur","cb","scope","_hashStr","toString","h","_has","_steps","push","func","key","i","splice","o","call","n","str","chr","len","hash","currentGridCell","down","equals","prevGridCell","addTile","onUserAction","dispose","_cel","tile","dif","lastHeight","last","wheel","round","removeTile","rightDown","getTileAtCell","newCell","Cell","abs","newTile","generateTile","_store","changed","val","localStorage"],"mappings":"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","file":"app.js","sourcesContent":["window.addEventListener('load', function(evt) {\n\tvar data = require('data');\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\tvar motor = require('motor');\n\n\tvar Input = require('Input');\n\tvar EditorPlane = require('EditorPlane');\n\n\tdata.load();\n\tvar map = data.get('map');\n\n\tvar timeTilAutoSave = 200; // timer runs per frame, 60fps\n\tvar saveTimer = 10;\n\tvar dirtyMap = false;\n\n\tvar fileInput = document.createElement('input');\n\tfileInput.type = 'file';\n\tfileInput.addEventListener('change', function(evt) {\n\t\tvar file = fileInput.files[0];\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar reader = new FileReader();\n\t\treader.onload = function(e) {\n\t\t\tvar json = null;\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(e.target.result);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.warn('File is not json format');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tloadMap(json);\n\t\t};\n\n\t\treader.readAsText(file);\n\n\t\treturn false;\n\t});\n\n\tui.on('error', function(evt) {\n\t\tconsole.warn(evt);\n\t});\n\n\tui.on(ui.Events.SAVE_MAP, function() {\n\t\tsaveMap();\n\t\treturn false;\n\t});\n\n\tui.on(ui.Events.LOAD_MAP, function() {\n\t\tfileInput.click();\n\t});\n\n\tkeyboard.on();\n\tmotor.on();\n\n\t// setup the thing\n\tvar canvas = document.getElementById('view');\n\tvar scene = new vg.Scene({\n\t\telement: canvas,\n\t\tcameraPosition: {x: 0, y: 300, z: 120}\n\t}, {\n\t\tmaxPolarAngle: (Math.PI / 2) - 0.01\n\t});\n\n\t// listen to the orbit controls to disable the raycaster while user adjusts the view\n\tscene.controls.addEventListener('wheel', onControlWheel);\n\n\tvar grid = new vg.HexGrid();\n\tvar board = new vg.Board(grid);\n\tvar mouse = new vg.MouseCaster(board.group, scene.camera, canvas);\n\tvar input = new Input(board.group, mouse);\n\tvar plane = new EditorPlane(board.group, grid, mouse);\n\n\tnexus.input = input;\n\tnexus.plane = plane;\n\tnexus.board = board;\n\tnexus.grid = grid;\n\tnexus.scene = scene;\n\tnexus.mouse = mouse;\n\n\ttower.tileAction.add(onMapChange, this);\n\n\t// scene.add(board.group);\n\tscene.focusOn(board.group);\n\n\tif (map) {\n\t\tloadMap(map);\n\t}\n\telse {\n\t\tgrid.generate({\n\t\t\tsize: 5 // size of the board\n\t\t});\n\t\tboard.generateTilemap();\n\t\tmap = grid.toJSON();\n\t\tdata.set('map', map);\n\t\tconsole.log('Created a new map');\n\n\t\tui.trigger(ui.Events.UPDATE_SETTINGS, {\n\t\t\tmapSize: 5,\n\t\t\tcellSize: 10 // default in grid object\n\t\t});\n\n\t\tvar boardSize = 20; // TODO: get from settings\n\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\tboard.generateOverlay();\n\t}\n\n\tscene.add(board.group);\n\n\tui.on(ui.Events.UPDATE_SETTINGS, function(settings) {\n\t\t// console.log('current grid size: '+grid.size+', new: '+settings.mapSize);\n\t\t// console.log('current cell size: '+grid.cellSize+', new: '+settings.cellSize);\n\t\tif (settings.mapSize === grid.size) {\n\t\t\tif (settings.cellSize === grid.cellSize) {\n\t\t\t\t// console.log('neither changed, ignored');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// console.log('only cell size changed');\n\t\t\tgrid.updateCellSize(settings.cellSize);\n\n\t\t\tvar boardSize = 20; // TODO: get from settings\n\t\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\t\tboard.generateOverlay();\n\n\t\t\tif (grid.autogenerated) {\n\t\t\t\tboard.generateTilemap();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// only map size or both changed\n\t\t\tgrid.updateCellSize(settings.cellSize);\n\t\t\tgrid.generate({\n\t\t\t\tsize: settings.mapSize\n\t\t\t});\n\n\t\t\tboardSize = 20; // TODO: get from settings\n\t\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\t\tboard.generateOverlay();\n\n\t\t\tif (grid.autogenerated) {\n\t\t\t\tboard.generateTilemap();\n\t\t\t}\n\t\t}\n\n\t\tonMapChange();\n\t});\n\n\tfunction update() {\n\t\tif (wheelTimer < 10) {\n\t\t\twheelTimer++;\n\t\t\tif (wheelTimer === 10) {\n\t\t\t\tmouse.active = true;\n\t\t\t}\n\t\t}\n\t\tif (dirtyMap) {\n\t\t\tsaveTimer--;\n\t\t\tif (saveTimer === 0) {\n\t\t\t\tdirtyMap = false;\n\t\t\t\tdata.set('map', map);\n\t\t\t\tdata.save();\n\t\t\t\tconsole.log('Map saved');\n\t\t\t}\n\t\t}\n\t\tmouse.update();\n\t\tinput.update();\n\t\tplane.update();\n\t\tscene.render();\n\t}\n\tmotor.add(update);\n\n\tvar wheelTimer = 10;\n\tfunction onControlWheel() {\n\t\tmouse.active = false;\n\t\twheelTimer = 0;\n\t}\n\n\tfunction onMapChange() {\n\t\tdirtyMap = true;\n\t\tsaveTimer = timeTilAutoSave;\n\t\tmap = grid.toJSON();\n\t}\n\n\tfunction loadMap(json) {\n\t\tgrid.fromJSON(json);\n\t\tboard.setGrid(grid);\n\n\t\tif (json.autogenerated) {\n\t\t\tboard.generateTilemap();\n\t\t}\n\n\t\tvar boardSize = 20; // TODO: get from settings\n\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\tboard.generateOverlay();\n\n\t\tui.trigger(ui.Events.UPDATE_SETTINGS, {\n\t\t\tmapSize: grid.size,\n\t\t\tcellSize: grid.cellSize\n\t\t});\n\t\tconsole.log('Map load complete');\n\t}\n\n\tfunction saveMap() {\n\t\tvar output = null;\n\n\t\tmap = grid.toJSON();\n\n\t\ttry {\n\t\t\toutput = JSON.stringify(map, null, '\\t');\n\t\t\toutput = output.replace(/[\\n\\t]+([\\d\\.e\\-\\[\\]]+)/g, '$1');\n\t\t}\n\t\tcatch (err) {\n\t\t\toutput = JSON.stringify(map);\n\t\t}\n\n\t\texportString(output, 'hex-map.json');\n\t}\n\n\t// taken from https://github.com/mrdoob/three.js/blob/master/editor/js/Menubar.File.js\n\tvar link = document.createElement('a');\n\tlink.style.display = 'none';\n\tdocument.body.appendChild(link);\n\n\tfunction exportString(output, filename) {\n\t\tvar blob = new Blob([output], {type: 'text/plain'});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\n\t\tlink.href = objectURL;\n\t\tlink.download = filename || 'data.json';\n\t\tlink.target = '_blank';\n\n\t\tvar evt = document.createEvent('MouseEvents');\n\t\tevt.initMouseEvent(\n\t\t\t'click', true, false, window, 0, 0, 0, 0, 0,\n\t\t\tfalse, false, false, false, 0, null\n\t\t);\n\t\tlink.dispatchEvent(evt);\n\t}\n});\n","define('keyboard', function() {\n\n\tfunction onDown(evt) {\n\t\tswitch (evt.keyCode) {\n\t\t\tcase 16:\n\t\t\t\tk.shift = true;\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tk.ctrl = true;\n\t\t\t\tbreak;\n\t\t}\n\t\tk.signal.dispatch(k.eventType.DOWN, evt.keyCode);\n\t}\n\n\tfunction onUp(evt) {\n\t\tswitch (evt.keyCode) {\n\t\t\tcase 16:\n\t\t\t\tk.shift = false;\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tk.ctrl = false;\n\t\t\t\tbreak;\n\t\t}\n\t\tk.signal.dispatch(k.eventType.UP, evt.keyCode);\n\t}\n\n\tvar k = {\n\t\tshift: false,\n\t\tctrl: false,\n\n\t\teventType: {\n\t\t\tDOWN: 'down',\n\t\t\tUP: 'up'\n\t\t},\n\n\t\tsignal: new vg.Signal(),\n\n\t\ton: function() {\n\t\t\tdocument.addEventListener('keydown', onDown, false);\n\t\t\tdocument.addEventListener('keyup', onUp, false);\n\t\t},\n\n\t\toff: function() {\n\t\t\tdocument.removeEventListener('keydown', onDown);\n\t\t\tdocument.removeEventListener('keyup', onUp);\n\t\t},\n\n\t\tcode: {\n\t\t\tA: 'A'.charCodeAt(0),\n\t\t\tB: 'B'.charCodeAt(0),\n\t\t\tC: 'C'.charCodeAt(0),\n\t\t\tD: 'D'.charCodeAt(0),\n\t\t\tE: 'E'.charCodeAt(0),\n\t\t\tF: 'F'.charCodeAt(0),\n\t\t\tG: 'G'.charCodeAt(0),\n\t\t\tH: 'H'.charCodeAt(0),\n\t\t\tI: 'I'.charCodeAt(0),\n\t\t\tJ: 'J'.charCodeAt(0),\n\t\t\tK: 'K'.charCodeAt(0),\n\t\t\tL: 'L'.charCodeAt(0),\n\t\t\tM: 'M'.charCodeAt(0),\n\t\t\tN: 'N'.charCodeAt(0),\n\t\t\tO: 'O'.charCodeAt(0),\n\t\t\tP: 'P'.charCodeAt(0),\n\t\t\tQ: 'Q'.charCodeAt(0),\n\t\t\tR: 'R'.charCodeAt(0),\n\t\t\tS: 'S'.charCodeAt(0),\n\t\t\tT: 'T'.charCodeAt(0),\n\t\t\tU: 'U'.charCodeAt(0),\n\t\t\tV: 'V'.charCodeAt(0),\n\t\t\tW: 'W'.charCodeAt(0),\n\t\t\tX: 'X'.charCodeAt(0),\n\t\t\tY: 'Y'.charCodeAt(0),\n\t\t\tZ: 'Z'.charCodeAt(0),\n\t\t\tZERO: '0'.charCodeAt(0),\n\t\t\tONE: '1'.charCodeAt(0),\n\t\t\tTWO: '2'.charCodeAt(0),\n\t\t\tTHREE: '3'.charCodeAt(0),\n\t\t\tFOUR: '4'.charCodeAt(0),\n\t\t\tFIVE: '5'.charCodeAt(0),\n\t\t\tSIX: '6'.charCodeAt(0),\n\t\t\tSEVEN: '7'.charCodeAt(0),\n\t\t\tEIGHT: '8'.charCodeAt(0),\n\t\t\tNINE: '9'.charCodeAt(0),\n\t\t\tNUMPAD_0: 96,\n\t\t\tNUMPAD_1: 97,\n\t\t\tNUMPAD_2: 98,\n\t\t\tNUMPAD_3: 99,\n\t\t\tNUMPAD_4: 100,\n\t\t\tNUMPAD_5: 101,\n\t\t\tNUMPAD_6: 102,\n\t\t\tNUMPAD_7: 103,\n\t\t\tNUMPAD_8: 104,\n\t\t\tNUMPAD_9: 105,\n\t\t\tNUMPAD_MULTIPLY: 106,\n\t\t\tNUMPAD_ADD: 107,\n\t\t\tNUMPAD_ENTER: 108,\n\t\t\tNUMPAD_SUBTRACT: 109,\n\t\t\tNUMPAD_DECIMAL: 110,\n\t\t\tNUMPAD_DIVIDE: 111,\n\t\t\tF1: 112,\n\t\t\tF2: 113,\n\t\t\tF3: 114,\n\t\t\tF4: 115,\n\t\t\tF5: 116,\n\t\t\tF6: 117,\n\t\t\tF7: 118,\n\t\t\tF8: 119,\n\t\t\tF9: 120,\n\t\t\tF10: 121,\n\t\t\tF11: 122,\n\t\t\tF12: 123,\n\t\t\tF13: 124,\n\t\t\tF14: 125,\n\t\t\tF15: 126,\n\t\t\tCOLON: 186,\n\t\t\tEQUALS: 187,\n\t\t\tUNDERSCORE: 189,\n\t\t\tQUESTION_MARK: 191,\n\t\t\tTILDE: 192,\n\t\t\tOPEN_BRACKET: 219,\n\t\t\tBACKWARD_SLASH: 220,\n\t\t\tCLOSED_BRACKET: 221,\n\t\t\tQUOTES: 222,\n\t\t\tBACKSPACE: 8,\n\t\t\tTAB: 9,\n\t\t\tCLEAR: 12,\n\t\t\tENTER: 13,\n\t\t\tSHIFT: 16,\n\t\t\tCTRL: 17,\n\t\t\tALT: 18,\n\t\t\tCAPS_LOCK: 20,\n\t\t\tESC: 27,\n\t\t\tSPACEBAR: 32,\n\t\t\tPAGE_UP: 33,\n\t\t\tPAGE_DOWN: 34,\n\t\t\tEND: 35,\n\t\t\tHOME: 36,\n\t\t\tLEFT: 37,\n\t\t\tUP: 38,\n\t\t\tRIGHT: 39,\n\t\t\tDOWN: 40,\n\t\t\tINSERT: 45,\n\t\t\tDELETE: 46,\n\t\t\tHELP: 47,\n\t\t\tNUM_LOCK: 144\n\t\t}\n\t};\n\n\treturn k;\n});\n","define('nexus', {\n\tgrid: null,\n\tboard: null,\n\tmouse: null,\n\tscene: null,\n\tinput: null,\n\tplane: null,\n});\n","define('tower', {\n\ttileAction: new vg.Signal(),\n\tobjAction: new vg.Signal(),\n\tuserAction: new vg.Signal(),\n\n\tsaveMap: new vg.Signal(),\n\tloadMap: new vg.Signal(),\n\n\tTILE_CHANGE_HEIGHT: 'cell.change.height',\n\tTILE_ADD: 'cell.add',\n\tTILE_REMOVE: 'cell.remove',\n});\n","/*\n\tTranslates the MouseCaster's events into more relevant data that the editor uses.\n*/\ndefine('Input', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\n\tvar Input = function(scene, mouse) {\n\t\tthis.mouse = mouse;\n\t\tthis.mouse.signal.add(this.onMouse, this);\n\n\t\tthis.mouseDelta = new THREE.Vector3();\n\t\tthis.mousePanMinDistance = 0.1;\n\t\tthis.heightStep = 5;\n\t\tthis.editorWorldPos = new THREE.Vector3(); // current grid position of mouse\n\n\t\tthis.overTile = null;\n\n\t\tthis._travel = 0;\n\n\t\tkeyboard.signal.add(function(type, code) {\n\t\t\tif (type === keyboard.eventType.DOWN) {\n\t\t\t\tif (code === keyboard.code.SHIFT) nexus.scene.controls.enabled = false;\n\t\t\t\t/*else if (code === keyboard.code.A) {\n\t\t\t\t\tnexus.scene.focusOn(nexus.board.tileGroup); // doesn't work??\n\t\t\t\t}*/\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (code === keyboard.code.SHIFT) nexus.scene.controls.enabled = true;\n\t\t\t}\n\t\t}, this);\n\t};\n\n\tInput.prototype = {\n\t\tupdate: function() {\n\t\t\tvar hit = this.mouse.allHits[0];\n\t\t\tif (hit) { // fun fact, 3 references are faster than 1 function call\n\t\t\t\tthis.editorWorldPos.x = hit.point.x;\n\t\t\t\tthis.editorWorldPos.y = hit.point.y;\n\t\t\t\tthis.editorWorldPos.z = hit.point.z;\n\t\t\t}\n\t\t\tvar dx = this.mouseDelta.x - this.mouse.screenPosition.x;\n\t\t\tvar dy = this.mouseDelta.y - this.mouse.screenPosition.y;\n\t\t\tthis._travel += Math.sqrt(dx * dx + dy * dy); // fun fact, sqrt is on of the most expensive math ops\n\t\t},\n\n\t\tonMouse: function(type, obj) {\n\t\t\tvar hit;\n\t\t\tif (this.mouse.allHits && this.mouse.allHits[0]) {\n\t\t\t\thit = this.mouse.allHits[0];\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase vg.MouseCaster.WHEEL:\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.WHEEL, this.overTile, obj);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis.overTile = obj.select();\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.OVER, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OUT:\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tobj.deselect();\n\t\t\t\t\t\tthis.overTile = null;\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.OUT, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\t\tthis.mouseDelta.copy(this.mouse.screenPosition);\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.DOWN, this.overTile, hit);\n\t\t\t\t\tthis._travel = 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\t\tif (this._travel > this.mousePanMinDistance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.UP, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.CLICK:\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.CLICK, this.overTile, hit);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Input;\n});\n","/*\n\t2D plane that the user moves mouse around on in order to build maps. Provides a working plane to navigate, and a visual aid for tile placement.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\ndefine('EditorPlane', function() {\n\n\tfunction EditorPlane(scene, grid, mouse) {\n\t\tthis.nexus = require('nexus');\n\t\tthis.tower = require('tower');\n\n\t\tthis.geometry = null;\n\t\tthis.mesh = null;\n\t\tthis.material = new THREE.MeshBasicMaterial({\n\t\t\tcolor: 0xffffff,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\n\t\tthis.scene = scene;\n\t\tthis.grid = grid;\n\n\t\tthis.mouse = mouse;\n\n\t\tthis.hoverMesh = null;\n\n\t\t/*this.mouse.signal.add(onUserAction, this);\n\t\tfunction onUserAction(type, overCell) {\n\t\t\tswitch (type) {\n\t\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\t\tif (overCell) {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OUT:\n\t\t\t\t\tthis.hoverMesh.mesh.visible = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\t\tif (!overCell) {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}*/\n\t}\n\n\tEditorPlane.prototype = {\n\n\t\tgeneratePlane: function(width, height) {\n\t\t\tif (this.mesh && this.mesh.parent) {\n\t\t\t\tthis.mesh.parent.remove(this.mesh);\n\t\t\t}\n\t\t\tthis.geometry = new THREE.PlaneBufferGeometry(width, width, 1, 1);\n\t\t\tthis.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\t\tthis.mesh.rotation.x = 90 * vg.DEG_TO_RAD;\n\t\t\t// this.mesh.position.y -= 0.1;\n\t\t\tthis.scene.add(this.mesh);\n\n\t\t\tif (this.hoverMesh && this.hoverMesh.parent) {\n\t\t\t\tthis.hoverMesh.parent.remove(this.hoverMesh);\n\t\t\t}\n\t\t\tthis.hoverMesh = this.grid.generateTilePoly(new THREE.MeshBasicMaterial({\n\t\t\t\tcolor: 0x1aaeff,\n\t\t\t\tside: THREE.DoubleSide\n\t\t\t}));\n\t\t\tthis.nexus.scene.container.add(this.hoverMesh);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tif (this.mouse.allHits.length && !this.mouse.pickedObject) {\n\t\t\t\tvar cell = this.grid.pixelToCell(this.nexus.input.editorWorldPos);\n\t\t\t\tthis.hoverMesh.position.copy(this.grid.cellToPixel(cell));\n\t\t\t\tthis.hoverMesh.position.y += 0.1;\n\t\t\t\tthis.hoverMesh.visible = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hoverMesh.visible = false;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn EditorPlane;\n});\n","/*\n\tThis is the ONLY place in the app that has a requestAnimationFrame handler.\n\tAll modules attach their functions to this module if they want in on the RAF.\n */\ndefine('motor', function() {\n\tvar _brake = false;\n\tvar _steps = [];\n\n\tfunction on() {\n\t\t_brake = false;\n\t\twindow.requestAnimationFrame(_update);\n\t\twindow.addEventListener('focus', onFocus, false);\n\t\twindow.addEventListener('blur', onBlur, false);\n\t}\n\n\tfunction off() {\n\t\t_brake = true;\n\t\twindow.removeEventListener('focus', onFocus, false);\n\t\twindow.removeEventListener('blur', onBlur, false);\n\t}\n\n\t// in order to be able to ID functions we have to hash them to generate unique-ish keys for us to find them with later\n\t// if we don't do this, we won't be able to remove callbacks that were bound and save us from binding callbacks multiple times all over the place\n\tfunction add(cb, scope) {\n\t\tvar k = _hashStr(cb.toString());\n\t\tvar h = _has(k);\n\t\tif (h === -1) {\n\t\t\t_steps.push({\n\t\t\t\tfunc: cb,\n\t\t\t\tscope: scope,\n\t\t\t\tkey: k\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction remove(cb) {\n\t\tvar k = _hashStr(cb.toString());\n\t\tvar i = _has(k);\n\t\tif (i !== -1) {\n\t\t\t_steps.splice(i, 1);\n\t\t}\n\t}\n\n\tfunction _update() {\n\t\tif (_brake) return;\n\t\twindow.requestAnimationFrame(_update);\n\n\t\tfor (var i = 0; i < _steps.length; i++) {\n\t\t\tvar o = _steps[i];\n\t\t\to.func.call(o.scope || null);\n\t\t}\n\t}\n\n\t// check if the handler already has iaw.motor particular callback\n\tfunction _has(k) {\n\t\tvar n = -1;\n\t\tvar i;\n\t\tfor (i = 0; i < _steps.length; i++) {\n\t\t\tn = _steps[i].key;\n\t\t\tif (n === k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tfunction onFocus(evt) {\n\t\t_brake = false;\n\t\t_update();\n\t}\n\n\tfunction onBlur(evt) {\n\t\t_brake = true;\n\t}\n\n\tfunction _hashStr(str) {\n\t\tvar hash = 0, i, chr, len;\n\t\tif (str.length === 0) return hash;\n\t\tfor (i = 0, len = str.length; i < len; i++) {\n\t\t\tchr = str.charCodeAt(i);\n\t\t\thash = ((hash << 5) - hash) + chr;\n\t\t\thash |= 0;\n\t\t}\n\t\treturn hash;\n\t}\n\n\treturn {\n\t\ton: on,\n\t\toff: off,\n\t\tadd: add,\n\t\tremove: remove,\n\t};\n});\n","/*\n\tManages cells and objects on the map.\n*/\ndefine('Editor', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\tvar motor = require('motor');\n\n\t// TODO: get these values from UI\n\tvar heightStep = 3;\n\n\t// PRIVATE\n\tvar lastHeight = 1;\n\tvar currentGridCell = null;\n\tvar prevGridCell = new THREE.Vector3();\n\tvar _cel = new vg.Cell();\n\n\ttower.userAction.add(onUserAction, this);\n\tmotor.add(update);\n\n\tfunction update() {\n\t\tcurrentGridCell = nexus.grid.pixelToCell(nexus.input.editorWorldPos);\n\t\tif (nexus.mouse.down && keyboard.shift && nexus.mouse.allHits && nexus.mouse.allHits.length) {\n\t\t\t// only check if the user's mouse is over the editor plane\n\t\t\tif (!currentGridCell.equals(prevGridCell)) {\n\t\t\t\taddTile(currentGridCell);\n\t\t\t}\n\t\t\tprevGridCell.copy(currentGridCell);\n\t\t}\n\t}\n\n\tfunction onUserAction(type, overTile, data) {\n\t\t// var hit = nexus.mouse.allHits[0];\n\t\tswitch (type) {\n\t\t\tcase vg.MouseCaster.WHEEL:\n\t\t\t\tif (keyboard.shift && overTile) {\n\t\t\t\t\tif (!overTile.cell) {\n\t\t\t\t\t\toverTile.dispose();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t_cel.copy(overTile.cell);\n\t\t\t\t\t_cel.tile = null;\n\n\t\t\t\t\tvar dif = lastHeight - data;\n\t\t\t\t\tvar last = _cel.h;\n\t\t\t\t\t_cel.h += dif > 0 ? -heightStep : heightStep;\n\t\t\t\t\tif (_cel.h < 1) _cel.h = 1;\n\n\t\t\t\t\tnexus.mouse.wheel = Math.round((_cel.h / heightStep) + (dif > 0 ? -1 : 1));\n\t\t\t\t\tlastHeight = nexus.mouse.wheel;\n\n\t\t\t\t\tif (last === _cel.h) return;\n\t\t\t\t\tremoveTile(overTile);\n\n\t\t\t\t\tvar tile = addTile(_cel);\n\t\t\t\t\ttile.select();\n\n\t\t\t\t\ttower.tileAction.dispatch(tower.TILE_CHANGE_HEIGHT, tile);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\tif (keyboard.shift) {\n\t\t\t\t\tif (overTile && nexus.mouse.rightDown) {\n\t\t\t\t\t\tremoveTile(overTile);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!overTile && nexus.mouse.down) {\n\t\t\t\t\t\taddTile(currentGridCell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.OUT:\n\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\tif (keyboard.shift && nexus.mouse.down && data && !overTile) {\n\t\t\t\t\t// if shift is down then they're painting, so add a tile immediately\n\t\t\t\t\taddTile(currentGridCell);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\tif (nexus.mouse.down && data && !overTile) {\n\t\t\t\t\t// create a new tile, if one isn't already there\n\t\t\t\t\taddTile(currentGridCell);\n\t\t\t\t}\n\t\t\t\telse if (nexus.mouse.rightDown && overTile) {\n\t\t\t\t\t// remove a tile if it's there and right mouse is down\n\t\t\t\t\tremoveTile(overTile);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction addTile(cell) {\n\t\tif (!cell || nexus.board.getTileAtCell(cell)) return;\n\n\t\tvar newCell = new vg.Cell();\n\t\tnewCell.copy(cell);\n\t\tnewCell.h = Math.abs(nexus.mouse.wheel * heightStep);\n\n\t\tvar newTile = nexus.grid.generateTile(newCell, 0.95);\n\n\t\tnexus.board.addTile(newTile);\n\n\t\ttower.tileAction.dispatch(tower.TILE_ADD, newTile);\n\n\t\treturn newTile;\n\t}\n\n\tfunction removeTile(overTile) {\n\t\tnexus.board.removeTile(overTile);\n\n\t\ttower.tileAction.dispatch(tower.TILE_REMOVE, overTile);\n\t}\n\n\treturn {\n\n\t};\n});\n","/*\n\tHandles JSON for whatever data needs to be saved to localStorage, and provides a convenient signal for whenever that data changes.\n*/\ndefine('data', {\n\t_store: {},\n\tchanged: new vg.Signal(),\n\n\tget: function(key) {\n\t\treturn this._store[key] || null;\n\t},\n\n\tset: function(key, val) {\n\t\t// fire event first so we can retrieve old data before it's overwritten (just in case)\n\t\tthis.changed.dispatch(key, this._store[key], val);\n\t\tthis._store[key] = val;\n\t},\n\n\tsave: function() {\n\t\twindow.localStorage['vongrid'] = JSON.stringify(this._store);\n\t},\n\n\tload: function(json) {\n\t\tvar data = window.localStorage['vongrid'];\n\t\tif (json || data) {\n\t\t\ttry {\n\t\t\t\tthis._store = json || JSON.parse(data);\n\t\t\t\tthis.changed.dispatch('load-success');\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.warn('Error loading editor data');\n\t\t\t\tthis.changed.dispatch('load-failure');\n\t\t\t}\n\t\t}\n\t}\n});\n"],"sourceRoot":"/source/"}