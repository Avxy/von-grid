{"version":3,"sources":["nexus.js","tower.js","removeTile.js","addTile.js","motor.js","keyboard.js","toolbag.js","main.js","Input.js","EditorPlane.js","data.js"],"names":["define","grid","board","mouse","scene","input","plane","tileAction","vg","Signal","objAction","userAction","saveMap","loadMap","TILE_CHANGE_HEIGHT","TILE_ADD","TILE_REMOVE","over","cell","tile","mesh","nexus","down","removeTile","up","tower","dispatch","require","onOver","onDown","onUp","action","addTile","getTileAtCell","newCell","Cell","copy","h","Math","abs","wheel","heightStep","newTile","generateTile","on","_brake","window","requestAnimationFrame","_update","addEventListener","onFocus","onBlur","off","removeEventListener","add","cb","scope","k","_hashStr","toString","_has","_steps","push","func","key","remove","i","splice","length","o","call","n","evt","str","chr","len","hash","charCodeAt","keyCode","shift","ctrl","signal","eventType","DOWN","UP","document","code","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_ENTER","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","COLON","EQUALS","UNDERSCORE","QUESTION_MARK","TILDE","OPEN_BRACKET","BACKWARD_SLASH","CLOSED_BRACKET","QUOTES","BACKSPACE","TAB","CLEAR","ENTER","SHIFT","CTRL","ALT","CAPS_LOCK","ESC","SPACEBAR","PAGE_UP","PAGE_DOWN","END","HOME","LEFT","RIGHT","INSERT","DELETE","HELP","NUM_LOCK","update","currentGridCell","pixelToCell","editorWorldPos","ui","activeTool","name","allHits","equals","prevGridCell","toolChange","Tools","ADD_TILE","tool","REMOVE_TILE","onUserAction","type","overTile","data","keyboard","rightDown","MouseCaster","WHEEL","controls","enabled","autogenerated","dispose","_cel","dif","lastHeight","last","round","select","OVER","OUT","motor","Vector3","this","Events","TOOL_CHANGE","wheelTimer","active","dirtyMap","saveTimer","set","map","save","console","log","render","onControlWheel","onMapChange","timeTilAutoSave","toJSON","json","fromJSON","setGrid","generateTilemap","boardSize","generatePlane","generateOverlay","trigger","UPDATE_SETTINGS","mapSize","size","cellSize","output","JSON","stringify","replace","err","exportString","filename","blob","Blob","objectURL","URL","createObjectURL","link","href","download","target","createEvent","initMouseEvent","dispatchEvent","Input","EditorPlane","load","get","fileInput","createElement","file","files","reader","FileReader","onload","e","parse","result","warn","readAsText","SAVE_MAP","LOAD_MAP","click","canvas","getElementById","Scene","element","cameraPosition","x","y","z","maxPolarAngle","PI","HexGrid","Board","group","camera","focusOn","generate","settings","updateCellSize","style","display","body","appendChild","onMouse","mouseDelta","mousePanMinDistance","_travel","prototype","hit","point","dx","screenPosition","dy","sqrt","obj","deselect","CLICK","geometry","material","MeshBasicMaterial","color","side","DoubleSide","hoverMesh","width","height","parent","PlaneBufferGeometry","Mesh","rotation","DEG_TO_RAD","generateTilePoly","container","pickedObject","position","cellToPixel","visible","_store","changed","val","localStorage"],"mappings":"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","file":"app.js","sourcesContent":["define('nexus', {\n\tgrid: null,\n\tboard: null,\n\tmouse: null,\n\tscene: null,\n\tinput: null,\n\tplane: null,\n});\n","define('tower', {\n\ttileAction: new vg.Signal(),\n\tobjAction: new vg.Signal(),\n\tuserAction: new vg.Signal(),\n\n\tsaveMap: new vg.Signal(),\n\tloadMap: new vg.Signal(),\n\n\tTILE_CHANGE_HEIGHT: 'cell.change.height',\n\tTILE_ADD: 'cell.add',\n\tTILE_REMOVE: 'cell.remove',\n});\n","define('removeTile', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\t// var keyboard = require('keyboard');\n\t// var motor = require('motor');\n\n\t// var disabled = false;\n\n\tfunction over(cell, tile, mesh) {\n\t\tif (tile && nexus.mouse.down) {\n\t\t\tremoveTile(tile);\n\t\t}\n\t}\n\n\tfunction down(cell, tile, mesh) {\n\t\tif (tile) {\n\t\t\tremoveTile(tile);\n\t\t}\n\t}\n\n\tfunction up(cell, tile, mesh) {\n\n\t}\n\n\tfunction removeTile(tile) {\n\t\tnexus.board.removeTile(tile);\n\t\ttower.tileAction.dispatch(tower.TILE_REMOVE, tile);\n\t}\n\n\treturn {\n\t\tonOver: over,\n\t\tonDown: down,\n\t\tonUp: up,\n\t\taction: removeTile\n\t};\n});\n","define('addTile', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\t// var keyboard = require('keyboard');\n\t// var motor = require('motor');\n\n\t// TODO: get these values from UI\n\tvar heightStep = 3;\n\n\tfunction over(cell, tile, mesh) {\n\t\tif (!tile && nexus.mouse.down) {\n\t\t\taddTile(cell);\n\t\t}\n\t}\n\n\tfunction down(cell, tile, mesh) {\n\t\tif (!tile) {\n\t\t\taddTile(cell);\n\t\t}\n\t}\n\n\tfunction up(cell, tile, mesh) {\n\n\t}\n\n\tfunction addTile(cell) {\n\t\tif (!cell || nexus.board.getTileAtCell(cell)) return;\n\n\t\tvar newCell = new vg.Cell();\n\t\tnewCell.copy(cell);\n\t\tnewCell.h = Math.abs(nexus.mouse.wheel * heightStep);\n\n\t\tvar newTile = nexus.grid.generateTile(newCell, 0.95);\n\n\t\tnexus.board.addTile(newTile);\n\n\t\ttower.tileAction.dispatch(tower.TILE_ADD, newTile);\n\n\t\treturn newTile;\n\t}\n\n\treturn {\n\t\tonOver: over,\n\t\tonDown: down,\n\t\tonUp: up,\n\t\taction: addTile\n\t};\n});\n","/*\n\tThis is the ONLY place in the app that has a requestAnimationFrame handler.\n\tAll modules attach their functions to this module if they want in on the RAF.\n */\ndefine('motor', function() {\n\tvar _brake = false;\n\tvar _steps = [];\n\n\tfunction on() {\n\t\t_brake = false;\n\t\twindow.requestAnimationFrame(_update);\n\t\twindow.addEventListener('focus', onFocus, false);\n\t\twindow.addEventListener('blur', onBlur, false);\n\t}\n\n\tfunction off() {\n\t\t_brake = true;\n\t\twindow.removeEventListener('focus', onFocus, false);\n\t\twindow.removeEventListener('blur', onBlur, false);\n\t}\n\n\t// in order to be able to ID functions we have to hash them to generate unique-ish keys for us to find them with later\n\t// if we don't do this, we won't be able to remove callbacks that were bound and save us from binding callbacks multiple times all over the place\n\tfunction add(cb, scope) {\n\t\tvar k = _hashStr(cb.toString());\n\t\tvar h = _has(k);\n\t\tif (h === -1) {\n\t\t\t_steps.push({\n\t\t\t\tfunc: cb,\n\t\t\t\tscope: scope,\n\t\t\t\tkey: k\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction remove(cb) {\n\t\tvar k = _hashStr(cb.toString());\n\t\tvar i = _has(k);\n\t\tif (i !== -1) {\n\t\t\t_steps.splice(i, 1);\n\t\t}\n\t}\n\n\tfunction _update() {\n\t\tif (_brake) return;\n\t\twindow.requestAnimationFrame(_update);\n\n\t\tfor (var i = 0; i < _steps.length; i++) {\n\t\t\tvar o = _steps[i];\n\t\t\to.func.call(o.scope || null);\n\t\t}\n\t}\n\n\t// check if the handler already has iaw.motor particular callback\n\tfunction _has(k) {\n\t\tvar n = -1;\n\t\tvar i;\n\t\tfor (i = 0; i < _steps.length; i++) {\n\t\t\tn = _steps[i].key;\n\t\t\tif (n === k) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tfunction onFocus(evt) {\n\t\t_brake = false;\n\t\t_update();\n\t}\n\n\tfunction onBlur(evt) {\n\t\t_brake = true;\n\t}\n\n\tfunction _hashStr(str) {\n\t\tvar hash = 0, i, chr, len;\n\t\tif (str.length === 0) return hash;\n\t\tfor (i = 0, len = str.length; i < len; i++) {\n\t\t\tchr = str.charCodeAt(i);\n\t\t\thash = ((hash << 5) - hash) + chr;\n\t\t\thash |= 0;\n\t\t}\n\t\treturn hash;\n\t}\n\n\treturn {\n\t\ton: on,\n\t\toff: off,\n\t\tadd: add,\n\t\tremove: remove,\n\t};\n});\n","define('keyboard', function() {\n\n\tfunction onDown(evt) {\n\t\tswitch (evt.keyCode) {\n\t\t\tcase 16:\n\t\t\t\tk.shift = true;\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tk.ctrl = true;\n\t\t\t\tbreak;\n\t\t}\n\t\tk.signal.dispatch(k.eventType.DOWN, evt.keyCode);\n\t}\n\n\tfunction onUp(evt) {\n\t\tswitch (evt.keyCode) {\n\t\t\tcase 16:\n\t\t\t\tk.shift = false;\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tk.ctrl = false;\n\t\t\t\tbreak;\n\t\t}\n\t\tk.signal.dispatch(k.eventType.UP, evt.keyCode);\n\t}\n\n\tvar k = {\n\t\tshift: false,\n\t\tctrl: false,\n\n\t\teventType: {\n\t\t\tDOWN: 'down',\n\t\t\tUP: 'up'\n\t\t},\n\n\t\tsignal: new vg.Signal(),\n\n\t\ton: function() {\n\t\t\tdocument.addEventListener('keydown', onDown, false);\n\t\t\tdocument.addEventListener('keyup', onUp, false);\n\t\t},\n\n\t\toff: function() {\n\t\t\tdocument.removeEventListener('keydown', onDown);\n\t\t\tdocument.removeEventListener('keyup', onUp);\n\t\t},\n\n\t\tcode: {\n\t\t\tA: 'A'.charCodeAt(0),\n\t\t\tB: 'B'.charCodeAt(0),\n\t\t\tC: 'C'.charCodeAt(0),\n\t\t\tD: 'D'.charCodeAt(0),\n\t\t\tE: 'E'.charCodeAt(0),\n\t\t\tF: 'F'.charCodeAt(0),\n\t\t\tG: 'G'.charCodeAt(0),\n\t\t\tH: 'H'.charCodeAt(0),\n\t\t\tI: 'I'.charCodeAt(0),\n\t\t\tJ: 'J'.charCodeAt(0),\n\t\t\tK: 'K'.charCodeAt(0),\n\t\t\tL: 'L'.charCodeAt(0),\n\t\t\tM: 'M'.charCodeAt(0),\n\t\t\tN: 'N'.charCodeAt(0),\n\t\t\tO: 'O'.charCodeAt(0),\n\t\t\tP: 'P'.charCodeAt(0),\n\t\t\tQ: 'Q'.charCodeAt(0),\n\t\t\tR: 'R'.charCodeAt(0),\n\t\t\tS: 'S'.charCodeAt(0),\n\t\t\tT: 'T'.charCodeAt(0),\n\t\t\tU: 'U'.charCodeAt(0),\n\t\t\tV: 'V'.charCodeAt(0),\n\t\t\tW: 'W'.charCodeAt(0),\n\t\t\tX: 'X'.charCodeAt(0),\n\t\t\tY: 'Y'.charCodeAt(0),\n\t\t\tZ: 'Z'.charCodeAt(0),\n\t\t\tZERO: '0'.charCodeAt(0),\n\t\t\tONE: '1'.charCodeAt(0),\n\t\t\tTWO: '2'.charCodeAt(0),\n\t\t\tTHREE: '3'.charCodeAt(0),\n\t\t\tFOUR: '4'.charCodeAt(0),\n\t\t\tFIVE: '5'.charCodeAt(0),\n\t\t\tSIX: '6'.charCodeAt(0),\n\t\t\tSEVEN: '7'.charCodeAt(0),\n\t\t\tEIGHT: '8'.charCodeAt(0),\n\t\t\tNINE: '9'.charCodeAt(0),\n\t\t\tNUMPAD_0: 96,\n\t\t\tNUMPAD_1: 97,\n\t\t\tNUMPAD_2: 98,\n\t\t\tNUMPAD_3: 99,\n\t\t\tNUMPAD_4: 100,\n\t\t\tNUMPAD_5: 101,\n\t\t\tNUMPAD_6: 102,\n\t\t\tNUMPAD_7: 103,\n\t\t\tNUMPAD_8: 104,\n\t\t\tNUMPAD_9: 105,\n\t\t\tNUMPAD_MULTIPLY: 106,\n\t\t\tNUMPAD_ADD: 107,\n\t\t\tNUMPAD_ENTER: 108,\n\t\t\tNUMPAD_SUBTRACT: 109,\n\t\t\tNUMPAD_DECIMAL: 110,\n\t\t\tNUMPAD_DIVIDE: 111,\n\t\t\tF1: 112,\n\t\t\tF2: 113,\n\t\t\tF3: 114,\n\t\t\tF4: 115,\n\t\t\tF5: 116,\n\t\t\tF6: 117,\n\t\t\tF7: 118,\n\t\t\tF8: 119,\n\t\t\tF9: 120,\n\t\t\tF10: 121,\n\t\t\tF11: 122,\n\t\t\tF12: 123,\n\t\t\tF13: 124,\n\t\t\tF14: 125,\n\t\t\tF15: 126,\n\t\t\tCOLON: 186,\n\t\t\tEQUALS: 187,\n\t\t\tUNDERSCORE: 189,\n\t\t\tQUESTION_MARK: 191,\n\t\t\tTILDE: 192,\n\t\t\tOPEN_BRACKET: 219,\n\t\t\tBACKWARD_SLASH: 220,\n\t\t\tCLOSED_BRACKET: 221,\n\t\t\tQUOTES: 222,\n\t\t\tBACKSPACE: 8,\n\t\t\tTAB: 9,\n\t\t\tCLEAR: 12,\n\t\t\tENTER: 13,\n\t\t\tSHIFT: 16,\n\t\t\tCTRL: 17,\n\t\t\tALT: 18,\n\t\t\tCAPS_LOCK: 20,\n\t\t\tESC: 27,\n\t\t\tSPACEBAR: 32,\n\t\t\tPAGE_UP: 33,\n\t\t\tPAGE_DOWN: 34,\n\t\t\tEND: 35,\n\t\t\tHOME: 36,\n\t\t\tLEFT: 37,\n\t\t\tUP: 38,\n\t\t\tRIGHT: 39,\n\t\t\tDOWN: 40,\n\t\t\tINSERT: 45,\n\t\t\tDELETE: 46,\n\t\t\tHELP: 47,\n\t\t\tNUM_LOCK: 144\n\t\t}\n\t};\n\n\treturn k;\n});\n","/*\n\tManages cells and objects on the map.\n*/\ndefine('toolbag', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\tvar motor = require('motor');\n\n\tvar addTile = require('addTile');\n\tvar removeTile = require('removeTile');\n\n\tvar tool = addTile; // should be the first tool in the bag as determined by tool-menu.tag\n\n\tvar heightStep = 3;\n\tvar lastHeight = 1;\n\tvar currentGridCell = null;\n\tvar prevGridCell = new THREE.Vector3();\n\tvar _cel = new vg.Cell();\n\n\ttower.userAction.add(onUserAction, this);\n\tui.on(ui.Events.TOOL_CHANGE, toolChange);\n\n\tmotor.add(update);\n\n\tfunction update() {\n\t\tcurrentGridCell = nexus.grid.pixelToCell(nexus.input.editorWorldPos);\n\t\tif (nexus.mouse.down && ui.activeTool.name === 'ADD_TILE' && nexus.mouse.allHits && nexus.mouse.allHits.length) {\n\t\t\t// special case since the over event doesn't fire if there's no tile\n\t\t\tif (!currentGridCell.equals(prevGridCell)) {\n\t\t\t\taddTile.action(currentGridCell, null);\n\t\t\t}\n\t\t\tprevGridCell.copy(currentGridCell);\n\t\t}\n\t}\n\n\tfunction toolChange(evt) {\n\t\tswitch (evt) {\n\t\t\tcase ui.Tools.ADD_TILE:\n\t\t\t\ttool = addTile;\n\t\t\t\tbreak;\n\t\t\tcase ui.Tools.REMOVE_TILE:\n\t\t\t\ttool = removeTile;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction onUserAction(type, overTile, data) {\n\t\t// var hit = nexus.mouse.allHits[0];\n\t\tif (keyboard.ctrl || /*data === null || */nexus.mouse.rightDown || !tool) {\n\t\t\t// there's no picked object, which means the user isn't hovering over any mesh in the scene\n\t\t\t// also ignore right-mouse clicks\n\t\t\treturn;\n\t\t}\n\t\tswitch (type) {\n\t\t\tcase vg.MouseCaster.WHEEL:\n\t\t\t\tnexus.scene.controls.enabled = false;\n\t\t\t\tif (keyboard.shift && overTile && nexus.grid.autogenerated) {\n\t\t\t\t\tif (!overTile.cell) {\n\t\t\t\t\t\toverTile.dispose();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t_cel.copy(overTile.cell);\n\t\t\t\t\t_cel.tile = null;\n\n\t\t\t\t\tvar dif = lastHeight - data;\n\t\t\t\t\tvar last = _cel.h;\n\t\t\t\t\t_cel.h += dif > 0 ? -heightStep : heightStep;\n\t\t\t\t\tif (_cel.h < 1) _cel.h = 1;\n\n\t\t\t\t\tnexus.mouse.wheel = Math.round((_cel.h / heightStep) + (dif > 0 ? -1 : 1));\n\t\t\t\t\tlastHeight = nexus.mouse.wheel;\n\n\t\t\t\t\tif (last === _cel.h) return;\n\t\t\t\t\tremoveTile.action(overTile);\n\n\t\t\t\t\tvar tile = addTile.action(_cel);\n\t\t\t\t\ttile.select();\n\n\t\t\t\t\ttower.tileAction.dispatch(tower.TILE_CHANGE_HEIGHT, tile);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\ttool.onOver(currentGridCell, overTile, data);\n\t\t\t\t/*if (keyboard.shift) {\n\t\t\t\t\tif (overTile && nexus.mouse.rightDown) {\n\t\t\t\t\t\tremoveTile(overTile);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!overTile && nexus.mouse.down) {\n\t\t\t\t\t\taddTile(currentGridCell);\n\t\t\t\t\t}\n\t\t\t\t}*/\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.OUT:\n\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\t/*if (keyboard.shift && nexus.mouse.down && data && !overTile) {\n\t\t\t\t\t// if shift is down then they're painting, so add a tile immediately\n\t\t\t\t\taddTile(currentGridCell);\n\t\t\t\t}*/\n\t\t\t\ttool.onDown(currentGridCell, overTile, data);\n\t\t\t\tbreak;\n\n\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\t/*if (nexus.mouse.down && data && !overTile) {\n\t\t\t\t\t// create a new tile, if one isn't already there\n\t\t\t\t\taddTile(currentGridCell);\n\t\t\t\t}\n\t\t\t\telse if (nexus.mouse.rightDown && overTile) {\n\t\t\t\t\t// remove a tile if it's there and right mouse is down\n\t\t\t\t\tremoveTile(overTile);\n\t\t\t\t}*/\n\t\t\t\ttool.onUp(currentGridCell, overTile, data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\n\t};\n});\n","window.addEventListener('load', function(evt) {\n\tvar data = require('data');\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\tvar motor = require('motor');\n\n\tvar Input = require('Input');\n\tvar EditorPlane = require('EditorPlane');\n\n\tdata.load();\n\tvar map = data.get('map');\n\n\tvar timeTilAutoSave = 200; // timer runs per frame, 60fps\n\tvar saveTimer = 10;\n\tvar dirtyMap = false;\n\n\tvar fileInput = document.createElement('input');\n\tfileInput.type = 'file';\n\tfileInput.addEventListener('change', function(evt) {\n\t\tvar file = fileInput.files[0];\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar reader = new FileReader();\n\t\treader.onload = function(e) {\n\t\t\tvar json = null;\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(e.target.result);\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.warn('File is not json format');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tloadMap(json);\n\t\t};\n\n\t\treader.readAsText(file);\n\n\t\treturn false;\n\t});\n\n\tui.on('error', function(evt) {\n\t\tconsole.warn(evt);\n\t});\n\n\tui.on(ui.Events.SAVE_MAP, function() {\n\t\tsaveMap();\n\t});\n\n\tui.on(ui.Events.LOAD_MAP, function() {\n\t\tfileInput.click();\n\t});\n\n\tkeyboard.on();\n\tmotor.on();\n\n\t// setup the thing\n\tvar canvas = document.getElementById('view');\n\tvar scene = new vg.Scene({\n\t\telement: canvas,\n\t\tcameraPosition: {x: 0, y: 300, z: 120}\n\t}, {\n\t\tmaxPolarAngle: (Math.PI / 2) - 0.01\n\t});\n\n\t// listen to the orbit controls to disable the raycaster while user adjusts the view\n\tscene.controls.addEventListener('wheel', onControlWheel);\n\n\tvar grid = new vg.HexGrid();\n\tvar board = new vg.Board(grid);\n\tvar mouse = new vg.MouseCaster(board.group, scene.camera, canvas);\n\tvar input = new Input(board.group, mouse);\n\tvar plane = new EditorPlane(board.group, grid, mouse);\n\n\tnexus.input = input;\n\tnexus.plane = plane;\n\tnexus.board = board;\n\tnexus.grid = grid;\n\tnexus.scene = scene;\n\tnexus.mouse = mouse;\n\n\ttower.tileAction.add(onMapChange, this);\n\n\t// scene.add(board.group);\n\tscene.focusOn(board.group);\n\n\tif (map) {\n\t\tloadMap(map);\n\t}\n\telse {\n\t\tgrid.generate({\n\t\t\tsize: 5 // size of the board\n\t\t});\n\t\tboard.generateTilemap();\n\t\tmap = grid.toJSON();\n\t\tdata.set('map', map);\n\t\tconsole.log('Created a new map');\n\n\t\tui.trigger(ui.Events.UPDATE_SETTINGS, {\n\t\t\tmapSize: 5,\n\t\t\tcellSize: 10 // default in grid object\n\t\t});\n\n\t\tvar boardSize = 20; // TODO: get from settings\n\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\tboard.generateOverlay();\n\t}\n\n\tscene.add(board.group);\n\n\tui.on(ui.Events.UPDATE_SETTINGS, function(settings) {\n\t\t// console.log('current grid size: '+grid.size+', new: '+settings.mapSize);\n\t\t// console.log('current cell size: '+grid.cellSize+', new: '+settings.cellSize);\n\t\tif (settings.mapSize === grid.size) {\n\t\t\tif (settings.cellSize === grid.cellSize) {\n\t\t\t\t// console.log('neither changed, ignored');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// console.log('only cell size changed');\n\t\t\tgrid.updateCellSize(settings.cellSize);\n\n\t\t\tvar boardSize = 20; // TODO: get from settings\n\t\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\t\tboard.generateOverlay();\n\n\t\t\tif (grid.autogenerated) {\n\t\t\t\tboard.generateTilemap();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// only map size or both changed\n\t\t\tgrid.updateCellSize(settings.cellSize);\n\t\t\tgrid.generate({\n\t\t\t\tsize: settings.mapSize\n\t\t\t});\n\n\t\t\tboardSize = 20; // TODO: get from settings\n\t\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\t\tboard.generateOverlay();\n\n\t\t\tif (grid.autogenerated) {\n\t\t\t\tboard.generateTilemap();\n\t\t\t}\n\t\t}\n\n\t\tonMapChange();\n\t});\n\n\tfunction update() {\n\t\tif (wheelTimer < 10) {\n\t\t\twheelTimer++;\n\t\t\tif (wheelTimer === 10) {\n\t\t\t\tmouse.active = true;\n\t\t\t}\n\t\t}\n\t\tif (dirtyMap) {\n\t\t\tsaveTimer--;\n\t\t\tif (saveTimer === 0) {\n\t\t\t\tdirtyMap = false;\n\t\t\t\tdata.set('map', map);\n\t\t\t\tdata.save();\n\t\t\t\tconsole.log('Map saved');\n\t\t\t}\n\t\t}\n\t\tmouse.update();\n\t\tinput.update();\n\t\tplane.update();\n\t\tscene.render();\n\t}\n\tmotor.add(update);\n\n\tvar wheelTimer = 10;\n\tfunction onControlWheel() {\n\t\tmouse.active = false;\n\t\twheelTimer = 0;\n\t}\n\n\tfunction onMapChange() {\n\t\tdirtyMap = true;\n\t\tsaveTimer = timeTilAutoSave;\n\t\tmap = grid.toJSON();\n\t}\n\n\tfunction loadMap(json) {\n\t\tgrid.fromJSON(json);\n\t\tboard.setGrid(grid);\n\n\t\tif (json.autogenerated) {\n\t\t\tboard.generateTilemap();\n\t\t}\n\n\t\tvar boardSize = 20; // TODO: get from settings\n\t\tplane.generatePlane(boardSize * boardSize * 1.8, boardSize * boardSize * 1.8);\n\t\tboard.generateOverlay();\n\n\t\tui.trigger(ui.Events.UPDATE_SETTINGS, {\n\t\t\tmapSize: grid.size,\n\t\t\tcellSize: grid.cellSize\n\t\t});\n\t\tconsole.log('Map load complete');\n\t}\n\n\tfunction saveMap() {\n\t\tvar output = null;\n\n\t\tmap = grid.toJSON();\n\n\t\ttry {\n\t\t\toutput = JSON.stringify(map, null, '\\t');\n\t\t\toutput = output.replace(/[\\n\\t]+([\\d\\.e\\-\\[\\]]+)/g, '$1');\n\t\t}\n\t\tcatch (err) {\n\t\t\toutput = JSON.stringify(map);\n\t\t}\n\n\t\texportString(output, 'hex-map.json');\n\t}\n\n\t// taken from https://github.com/mrdoob/three.js/blob/master/editor/js/Menubar.File.js\n\tvar link = document.createElement('a');\n\tlink.style.display = 'none';\n\tdocument.body.appendChild(link);\n\n\tfunction exportString(output, filename) {\n\t\tvar blob = new Blob([output], {type: 'text/plain'});\n\t\tvar objectURL = URL.createObjectURL(blob);\n\n\t\tlink.href = objectURL;\n\t\tlink.download = filename || 'data.json';\n\t\tlink.target = '_blank';\n\n\t\tvar evt = document.createEvent('MouseEvents');\n\t\tevt.initMouseEvent(\n\t\t\t'click', true, false, window, 0, 0, 0, 0, 0,\n\t\t\tfalse, false, false, false, 0, null\n\t\t);\n\t\tlink.dispatchEvent(evt);\n\t}\n});\n","/*\n\tTranslates the MouseCaster's events into more relevant data that the editor uses.\n*/\ndefine('Input', function() {\n\tvar tower = require('tower');\n\tvar nexus = require('nexus');\n\tvar keyboard = require('keyboard');\n\n\tvar Input = function(scene, mouse) {\n\t\tthis.mouse = mouse;\n\t\tthis.mouse.signal.add(this.onMouse, this);\n\n\t\tthis.mouseDelta = new THREE.Vector3();\n\t\tthis.mousePanMinDistance = 0.1;\n\t\tthis.heightStep = 5;\n\t\tthis.editorWorldPos = new THREE.Vector3(); // current grid position of mouse\n\n\t\tthis.overTile = null;\n\n\t\tthis._travel = 0;\n\n\t\t/*keyboard.signal.add(function(type, code) {\n\t\t\tif (type === keyboard.eventType.DOWN) {\n\t\t\t\tif (code === keyboard.code.SHIFT) nexus.scene.controls.enabled = false;\n\t\t\t\telse if (code === keyboard.code.A) {\n\t\t\t\t\tnexus.scene.focusOn(nexus.board.tileGroup); // doesn't work??\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (code === keyboard.code.SHIFT) nexus.scene.controls.enabled = true;\n\t\t\t}\n\t\t}, this);*/\n\t};\n\n\tInput.prototype = {\n\t\tupdate: function() {\n\t\t\tvar hit = this.mouse.allHits[0];\n\t\t\tif (hit) { // fun fact, 3 references are faster than 1 function call\n\t\t\t\tthis.editorWorldPos.x = hit.point.x;\n\t\t\t\tthis.editorWorldPos.y = hit.point.y;\n\t\t\t\tthis.editorWorldPos.z = hit.point.z;\n\t\t\t}\n\t\t\tvar dx = this.mouseDelta.x - this.mouse.screenPosition.x;\n\t\t\tvar dy = this.mouseDelta.y - this.mouse.screenPosition.y;\n\t\t\tthis._travel += Math.sqrt(dx * dx + dy * dy); // fun fact, sqrt is on of the most expensive math ops\n\n\t\t\tif (keyboard.ctrl) {\n\t\t\t\tnexus.scene.controls.enabled = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnexus.scene.controls.enabled = false;\n\t\t\t}\n\t\t},\n\n\t\tonMouse: function(type, obj) {\n\t\t\tvar hit;\n\t\t\tif (this.mouse.allHits && this.mouse.allHits[0]) {\n\t\t\t\thit = this.mouse.allHits[0];\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase vg.MouseCaster.WHEEL:\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.WHEEL, this.overTile, obj);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tthis.overTile = obj.select();\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.OVER, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OUT:\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tobj.deselect();\n\t\t\t\t\t\tthis.overTile = null;\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.OUT, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\t\tthis.mouseDelta.copy(this.mouse.screenPosition);\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.DOWN, this.overTile, hit);\n\t\t\t\t\tthis._travel = 0;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\t\tif (this._travel > this.mousePanMinDistance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.UP, this.overTile, hit);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.CLICK:\n\t\t\t\t\ttower.userAction.dispatch(vg.MouseCaster.CLICK, this.overTile, hit);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn Input;\n});\n","/*\n\t2D plane that the user moves mouse around on in order to build maps. Provides a working plane to navigate, and a visual aid for tile placement.\n\n\t@author Corey Birnbaum https://github.com/vonWolfehaus/\n */\ndefine('EditorPlane', function() {\n\n\tfunction EditorPlane(scene, grid, mouse) {\n\t\tthis.nexus = require('nexus');\n\t\tthis.tower = require('tower');\n\n\t\tthis.geometry = null;\n\t\tthis.mesh = null;\n\t\tthis.material = new THREE.MeshBasicMaterial({\n\t\t\tcolor: 0xffffff,\n\t\t\tside: THREE.DoubleSide\n\t\t});\n\n\t\tthis.scene = scene;\n\t\tthis.grid = grid;\n\n\t\tthis.mouse = mouse;\n\n\t\tthis.hoverMesh = null;\n\n\t\t/*this.mouse.signal.add(onUserAction, this);\n\t\tfunction onUserAction(type, overCell) {\n\t\t\tswitch (type) {\n\t\t\t\tcase vg.MouseCaster.OVER:\n\t\t\t\t\tif (overCell) {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.OUT:\n\t\t\t\t\tthis.hoverMesh.mesh.visible = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.DOWN:\n\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase vg.MouseCaster.UP:\n\t\t\t\t\tif (!overCell) {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.hoverMesh.mesh.visible = false;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}*/\n\t}\n\n\tEditorPlane.prototype = {\n\n\t\tgeneratePlane: function(width, height) {\n\t\t\tif (this.mesh && this.mesh.parent) {\n\t\t\t\tthis.mesh.parent.remove(this.mesh);\n\t\t\t}\n\t\t\tthis.geometry = new THREE.PlaneBufferGeometry(width, width, 1, 1);\n\t\t\tthis.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\t\tthis.mesh.rotation.x = 90 * vg.DEG_TO_RAD;\n\t\t\t// this.mesh.position.y -= 0.1;\n\t\t\tthis.scene.add(this.mesh);\n\n\t\t\tif (this.hoverMesh && this.hoverMesh.parent) {\n\t\t\t\tthis.hoverMesh.parent.remove(this.hoverMesh);\n\t\t\t}\n\t\t\tthis.hoverMesh = this.grid.generateTilePoly(new THREE.MeshBasicMaterial({\n\t\t\t\tcolor: 0x1aaeff,\n\t\t\t\tside: THREE.DoubleSide\n\t\t\t}));\n\t\t\tthis.nexus.scene.container.add(this.hoverMesh);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tif (this.mouse.allHits.length && !this.mouse.pickedObject) {\n\t\t\t\tvar cell = this.grid.pixelToCell(this.nexus.input.editorWorldPos);\n\t\t\t\tthis.hoverMesh.position.copy(this.grid.cellToPixel(cell));\n\t\t\t\tthis.hoverMesh.position.y += 0.1;\n\t\t\t\tthis.hoverMesh.visible = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hoverMesh.visible = false;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn EditorPlane;\n});\n","/*\n\tHandles JSON for whatever data needs to be saved to localStorage, and provides a convenient signal for whenever that data changes.\n*/\ndefine('data', {\n\t_store: {},\n\tchanged: new vg.Signal(),\n\n\tget: function(key) {\n\t\treturn this._store[key] || null;\n\t},\n\n\tset: function(key, val) {\n\t\t// fire event first so we can retrieve old data before it's overwritten (just in case)\n\t\tthis.changed.dispatch(key, this._store[key], val);\n\t\tthis._store[key] = val;\n\t},\n\n\tsave: function() {\n\t\twindow.localStorage['vongrid'] = JSON.stringify(this._store);\n\t},\n\n\tload: function(json) {\n\t\tvar data = window.localStorage['vongrid'];\n\t\tif (json || data) {\n\t\t\ttry {\n\t\t\t\tthis._store = json || JSON.parse(data);\n\t\t\t\tthis.changed.dispatch('load-success');\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\tconsole.warn('Error loading editor data');\n\t\t\t\tthis.changed.dispatch('load-failure');\n\t\t\t}\n\t\t}\n\t}\n});\n"],"sourceRoot":"/source/"}